{"version":3,"sources":["../src/puzzle-builder.js"],"names":["_","require","Puzzle","_closeCell","builder","_openRow","_cell","push","_closeRow","_grid","_addCell","options","isBlockCell","solution","PuzzleBuilder","_clues","across","down","_clueArrays","prototype","Object","create","addRow","configurable","value","addCell","Error","solutionLetter","addBlockCell","addAcrossClues","clues","each","clueText","clueNumber","addAcrossClue","addDownClues","addDownClue","build","maxRowLength","row","length","addBlocks","grid","toString","exports","module"],"mappings":"AAEA,IAAMA,CAAC,GAAQC,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMC,MAAM,GAAGD,OAAO,CAAC,UAAD,CAAtB;;AAEA,SAASE,UAAT,CAAoBC,OAApB,EAA6B;AAC5B,MAAI,CAACA,OAAO,CAACC,QAAT,IAAqB,CAACD,OAAO,CAACE,KAAlC,EAAyC;AACxC;AACA;;AAEDF,EAAAA,OAAO,CAACC,QAAR,CAAiBE,IAAjB,CAAsBH,OAAO,CAACE,KAA9B;;AAEA,SAAOF,OAAO,CAACE,KAAf;AACA;;AAED,SAASE,SAAT,CAAmBJ,OAAnB,EAA4B;AAC3B,MAAI,CAACA,OAAO,CAACC,QAAb,EAAuB;AACtB;AACA;;AAEDF,EAAAA,UAAU,CAACC,OAAD,CAAV;;AAEAA,EAAAA,OAAO,CAACK,KAAR,CAAcF,IAAd,CAAmBH,OAAO,CAACC,QAA3B;;AAEA,SAAOD,OAAO,CAACC,QAAf;AACA;;AAED,SAASK,QAAT,CAAkBN,OAAlB,EAA2BO,OAA3B,EAAoC;AACnCA,EAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;;AAEAR,EAAAA,UAAU,CAACC,OAAD,CAAV;;AAEAA,EAAAA,OAAO,CAACE,KAAR,GAAgB,EAAhB;;AAEA,MAAIK,OAAO,CAACC,WAAZ,EAAyB;AACxBR,IAAAA,OAAO,CAACE,KAAR,CAAcM,WAAd,GAA4B,IAA5B;AACA;;AAED,MAAID,OAAO,CAACE,QAAZ,EAAsB;AACrBT,IAAAA,OAAO,CAACE,KAAR,CAAcO,QAAd,GAAyBF,OAAO,CAACE,QAAjC;AACA;AACD;;AAED,SAASC,aAAT,GAAyB;AACxB,MAAMV,OAAO,GAAG,IAAhB;AAEAA,EAAAA,OAAO,CAACK,KAAR,GAAgB,EAAhB;AAEAL,EAAAA,OAAO,CAACW,MAAR,GAAiB;AAChBC,IAAAA,MAAM,EAAE,EADQ;AAEhBC,IAAAA,IAAI,EAAE;AAFU,GAAjB;AAKAb,EAAAA,OAAO,CAACc,WAAR,GAAsB;AACrBF,IAAAA,MAAM,EAAE,EADa;AAErBC,IAAAA,IAAI,EAAE;AAFe,GAAtB;AAIA;;AAEDH,aAAa,CAACK,SAAd,GAA0BC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACD,SAArB,EAAgC;AACzDG,EAAAA,MAAM,EAAE;AACPC,IAAAA,YAAY,EAAE,IADP;AAEPC,IAAAA,KAAK,EAAE,iBAAW;AACjB,UAAMpB,OAAO,GAAG,IAAhB;;AAEAI,MAAAA,SAAS,CAACJ,OAAD,CAAT;;AAEAA,MAAAA,OAAO,CAACC,QAAR,GAAmB,EAAnB;AAEA,aAAOD,OAAP;AACA;AAVM,GADiD;AAczDqB,EAAAA,OAAO,EAAE;AACRF,IAAAA,YAAY,EAAE,IADN;AAERC,IAAAA,KAAK,EAAE,iBAAW;AACjB,UAAMpB,OAAO,GAAG,IAAhB;;AAEA,UAAI,CAACA,OAAO,CAACC,QAAb,EAAuB;AACtB,cAAM,IAAIqB,KAAJ,CAAU,sCAAV,CAAN;AACA;;AAEDhB,MAAAA,QAAQ,CAACN,OAAD,CAAR;;AAEA,aAAOA,OAAP;AACA;AAZO,GAdgD;AA6BzDS,EAAAA,QAAQ,EAAE;AACTU,IAAAA,YAAY,EAAE,IADL;AAETC,IAAAA,KAAK,EAAE,eAASG,cAAT,EAAyB;AAC/B,UAAMvB,OAAO,GAAG,IAAhB;;AAEA,UAAI,CAACA,OAAO,CAACE,KAAb,EAAoB;AACnB,cAAM,IAAIoB,KAAJ,CAAU,kCAAV,CAAN;AACA;;AAEDtB,MAAAA,OAAO,CAACE,KAAR,CAAcO,QAAd,GAAyBc,cAAzB;AAEA,aAAOvB,OAAP;AACA;AAZQ,GA7B+C;AA4CzDwB,EAAAA,YAAY,EAAE;AACbL,IAAAA,YAAY,EAAE,IADD;AAEbC,IAAAA,KAAK,EAAE,iBAAW;AACjB,UAAMpB,OAAO,GAAG,IAAhB;;AAEA,UAAI,CAACA,OAAO,CAACC,QAAb,EAAuB;AACtB,cAAM,IAAIqB,KAAJ,CAAU,2CAAV,CAAN;AACA;;AAEDhB,MAAAA,QAAQ,CAACN,OAAD,EAAU;AACjBQ,QAAAA,WAAW,EAAE;AADI,OAAV,CAAR;;AAIA,aAAOR,OAAP;AACA;AAdY,GA5C2C;AA6DzDyB,EAAAA,cAAc,EAAE;AACfN,IAAAA,YAAY,EAAE,IADC;AAEfC,IAAAA,KAAK,EAAE,eAASM,KAAT,EAAgB;AACtB,UAAM1B,OAAO,GAAG,IAAhB;;AAEAJ,MAAAA,CAAC,CAAC+B,IAAF,CACCD,KADD,EAEC,UAASE,QAAT,EAAmBC,UAAnB,EAA+B;AAC9B7B,QAAAA,OAAO,CAACW,MAAR,CAAeC,MAAf,CAAsBiB,UAAtB,IAAoCD,QAApC;AACA,OAJF;;AAOA,aAAO5B,OAAP;AACA;AAbc,GA7DyC;AA6EzD8B,EAAAA,aAAa,EAAE;AACdX,IAAAA,YAAY,EAAE,IADA;AAEdC,IAAAA,KAAK,EAAE,eAASS,UAAT,EAAqBD,QAArB,EAA+B;AACrC,UAAM5B,OAAO,GAAG,IAAhB;AAEA,UAAM0B,KAAK,GAAG,EAAd;AAEAA,MAAAA,KAAK,CAACG,UAAD,CAAL,GAAoBD,QAApB;AAEA,aAAO5B,OAAO,CAACyB,cAAR,CAAuBC,KAAvB,CAAP;AACA;AAVa,GA7E0C;AA0FzDK,EAAAA,YAAY,EAAE;AACbZ,IAAAA,YAAY,EAAE,IADD;AAEbC,IAAAA,KAAK,EAAE,eAASM,KAAT,EAAgB;AACtB,UAAM1B,OAAO,GAAG,IAAhB;;AAEAJ,MAAAA,CAAC,CAAC+B,IAAF,CACCD,KADD,EAEC,UAASE,QAAT,EAAmBC,UAAnB,EAA+B;AAC9B7B,QAAAA,OAAO,CAACW,MAAR,CAAeE,IAAf,CAAoBgB,UAApB,IAAkCD,QAAlC;AACA,OAJF;;AAOA,aAAO5B,OAAP;AACA;AAbY,GA1F2C;AA0GzDgC,EAAAA,WAAW,EAAE;AACZb,IAAAA,YAAY,EAAE,IADF;AAEZC,IAAAA,KAAK,EAAE,eAASS,UAAT,EAAqBD,QAArB,EAA+B;AACrC,UAAM5B,OAAO,GAAG,IAAhB;AAEA,UAAM0B,KAAK,GAAG,EAAd;AAEAA,MAAAA,KAAK,CAACG,UAAD,CAAL,GAAoBD,QAApB;AAEA,aAAO5B,OAAO,CAAC+B,YAAR,CAAqBL,KAArB,CAAP;AACA;AAVW,GA1G4C;AAuHzDO,EAAAA,KAAK,EAAE;AACNd,IAAAA,YAAY,EAAE,IADR;AAENC,IAAAA,KAAK,EAAE,iBAAW;AACjB,UAAMpB,OAAO,GAAG,IAAhB;;AAEAI,MAAAA,SAAS,CAACJ,OAAD,CAAT;;AAEA,UAAIkC,YAAY,GAAG,CAAnB;;AAEAtC,MAAAA,CAAC,CAAC+B,IAAF,CACC3B,OAAO,CAACK,KADT,EAEC,UAAS8B,GAAT,EAAc;AACb,YAAIA,GAAG,CAACC,MAAJ,GAAaF,YAAjB,EAA+B;AAC9BA,UAAAA,YAAY,GAAGC,GAAG,CAACC,MAAnB;AACA;AACD,OANF;;AASAxC,MAAAA,CAAC,CAAC+B,IAAF,CACC3B,OAAO,CAACK,KADT,EAEC,UAAS8B,GAAT,EAAc;AACb,YAAIA,GAAG,CAACC,MAAJ,GAAaF,YAAjB,EAA+B;AAC9BlC,UAAAA,OAAO,CAACC,QAAR,GAAmBkC,GAAnB;AAEAnC,UAAAA,OAAO,CAACqC,SAAR,CAAkBH,YAAY,GAAGC,GAAG,CAACC,MAAnB,GAA4B,CAA9C;AACA;AACD,OARF;;AAWA,aAAO,IAAItC,MAAJ,CAAW;AACjBwC,QAAAA,IAAI,EAAEtC,OAAO,CAACK,KADG;AAEjBqB,QAAAA,KAAK,EAAE1B,OAAO,CAACW;AAFE,OAAX,CAAP;AAIA;AAjCK,GAvHkD;AA0JzD4B,EAAAA,QAAQ,EAAE;AACTpB,IAAAA,YAAY,EAAE,IADL;AAETC,IAAAA,KAAK,EAAE,iBAAW;AACjB,aAAO,wBAAP;AACA;AAJQ;AA1J+C,CAAhC,CAA1B;AAkKAoB,OAAO,GAAGC,MAAM,CAACD,OAAP,GAAiB9B,aAA3B","sourcesContent":["\n\nconst _      = require(\"lodash\");\nconst Puzzle = require(\"./puzzle\");\n\nfunction _closeCell(builder) {\n\tif (!builder._openRow || !builder._cell) {\n\t\treturn;\n\t}\n\n\tbuilder._openRow.push(builder._cell);\n\n\tdelete builder._cell;\n}\n\nfunction _closeRow(builder) {\n\tif (!builder._openRow) {\n\t\treturn;\n\t}\n\n\t_closeCell(builder);\n\n\tbuilder._grid.push(builder._openRow);\n\n\tdelete builder._openRow;\n}\n\nfunction _addCell(builder, options) {\n\toptions = options || {};\n\n\t_closeCell(builder);\n\n\tbuilder._cell = {};\n\n\tif (options.isBlockCell) {\n\t\tbuilder._cell.isBlockCell = true;\n\t}\n\n\tif (options.solution) {\n\t\tbuilder._cell.solution = options.solution;\n\t}\n}\n\nfunction PuzzleBuilder() {\n\tconst builder = this;\n\n\tbuilder._grid = [];\n\n\tbuilder._clues = {\n\t\tacross: {},\n\t\tdown: {}\n\t};\n\n\tbuilder._clueArrays = {\n\t\tacross: [],\n\t\tdown: [],\n\t};\t\n}\n\nPuzzleBuilder.prototype = Object.create(Object.prototype, {\n\taddRow: {\n\t\tconfigurable: true,\n\t\tvalue: function() {\n\t\t\tconst builder = this;\n\n\t\t\t_closeRow(builder);\n\n\t\t\tbuilder._openRow = [];\n\n\t\t\treturn builder;\n\t\t}\n\t},\n\n\taddCell: {\n\t\tconfigurable: true,\n\t\tvalue: function() {\n\t\t\tconst builder = this;\n\t\t\t\n\t\t\tif (!builder._openRow) {\n\t\t\t\tthrow new Error(\"`addCell` called without an open row\");\n\t\t\t}\n\n\t\t\t_addCell(builder);\n\n\t\t\treturn builder;\n\t\t}\n\t},\n\n\tsolution: {\n\t\tconfigurable: true,\n\t\tvalue: function(solutionLetter) {\n\t\t\tconst builder = this;\n\n\t\t\tif (!builder._cell) {\n\t\t\t\tthrow new Error(\"`solution` called without a cell\");\n\t\t\t}\n\n\t\t\tbuilder._cell.solution = solutionLetter;\n\n\t\t\treturn builder;\n\t\t}\n\t},\n\n\taddBlockCell: {\n\t\tconfigurable: true,\n\t\tvalue: function() {\n\t\t\tconst builder = this;\n\t\t\t\n\t\t\tif (!builder._openRow) {\n\t\t\t\tthrow new Error(\"`addBlockCell` called without an open row\");\n\t\t\t}\n\n\t\t\t_addCell(builder, {\n\t\t\t\tisBlockCell: true\n\t\t\t});\n\n\t\t\treturn builder;\n\t\t}\n\t},\n\n\taddAcrossClues: {\n\t\tconfigurable: true,\n\t\tvalue: function(clues) {\n\t\t\tconst builder = this;\n\n\t\t\t_.each(\n\t\t\t\tclues,\n\t\t\t\tfunction(clueText, clueNumber) {\n\t\t\t\t\tbuilder._clues.across[clueNumber] = clueText;\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn builder;\n\t\t}\n\t},\n\n\taddAcrossClue: {\n\t\tconfigurable: true,\n\t\tvalue: function(clueNumber, clueText) {\n\t\t\tconst builder = this;\n\n\t\t\tconst clues = {};\n\n\t\t\tclues[clueNumber] = clueText;\n\n\t\t\treturn builder.addAcrossClues(clues);\n\t\t}\n\t},\n\n\taddDownClues: {\n\t\tconfigurable: true,\n\t\tvalue: function(clues) {\n\t\t\tconst builder = this;\n\n\t\t\t_.each(\n\t\t\t\tclues,\n\t\t\t\tfunction(clueText, clueNumber) {\n\t\t\t\t\tbuilder._clues.down[clueNumber] = clueText;\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn builder;\n\t\t}\n\t},\n\n\taddDownClue: {\n\t\tconfigurable: true,\n\t\tvalue: function(clueNumber, clueText) {\n\t\t\tconst builder = this;\n\n\t\t\tconst clues = {};\n\n\t\t\tclues[clueNumber] = clueText;\n\n\t\t\treturn builder.addDownClues(clues);\n\t\t}\n\t},\n\n\tbuild: {\n\t\tconfigurable: true,\n\t\tvalue: function() {\n\t\t\tconst builder = this;\n\n\t\t\t_closeRow(builder);\n\n\t\t\tlet maxRowLength = 0;\n\n\t\t\t_.each(\n\t\t\t\tbuilder._grid,\n\t\t\t\tfunction(row) {\n\t\t\t\t\tif (row.length > maxRowLength) {\n\t\t\t\t\t\tmaxRowLength = row.length;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\n\t\t\t_.each(\n\t\t\t\tbuilder._grid,\n\t\t\t\tfunction(row) {\n\t\t\t\t\tif (row.length < maxRowLength) {\n\t\t\t\t\t\tbuilder._openRow = row;\n\n\t\t\t\t\t\tbuilder.addBlocks(maxRowLength - row.length + 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn new Puzzle({\n\t\t\t\tgrid: builder._grid,\n\t\t\t\tclues: builder._clues\n\t\t\t});\n\t\t}\n\t},\n\ttoString: {\n\t\tconfigurable: true,\n\t\tvalue: function() {\n\t\t\treturn \"[object PuzzleBuilder]\";\n\t\t}\n\t},\n});\n\nexports = module.exports = PuzzleBuilder;\n"],"file":"puzzle-builder.js"}