{"version":3,"sources":["../../src/parsers/puz.js"],"names":["map","require","get","range","reverse","zip","each","reduce","flatten","padStart","chunk","findKey","compact","size","iconv","PUZReader","Puzzle","BLOCK_CELL_VALUE","BLOCK_CELL_VALUE_REGEX","EXTENSION_HEADER_LENGTH","HEADER_CHECKSUM_BYTE_LENGTH","MAGIC_CHECKSUM_BYTE_LENGTH","UNKNOWN1_BYTE_LENGTH","UNKNOWN2_BYTE_LENGTH","CHECKSUM_BUFFER_LENGTH","NUMBER_OF_CLUES_BUFFER_LENGTH","PUZZLE_TYPE_BUFFER_LENGTH","SOLUTION_STATE_BUFFER_LENGTH","HEADER_BUFFER_LENGTH","EXTENSION_LENGTH_BUFFER_LENGTH","EXTENSION_NAME_LENGTH","PUZZLE_KEY_LENGTH","RTBL_KEY_PADDING_WIDTH","PUZZLE_TYPE","Normal","Diagramless","SOLUTION_STATE","Unlocked","Locked","CELL_STATES","PreviouslyIncorrect","CurrentlyIncorrect","AnswerGiven","Circled","ATOZ","MINIMUM_KEY_VALUE","MAXIMUM_KEY_VALUE","_doChecksum","buffer","cksum","i","length","lowbit","readUInt8","_readHeader","reader","options","data","globalChecksum","_readUInt16","_seek","current","headerChecksum","magicChecksum","_readValues","version","_readString","unknown1","scrambledChecksum","unknown2","width","_readUInt8","height","numberOfClues","puzzleType","solutionState","solutionKey","Error","_processExtension","extension","name","board","b","rebus_solutions","decode","ENCODING","split","solutions","solutionPair","pair","parseInt","timings","timing","elapsed","running","cell_states","user_rebus_entries","entry","_readExtension","checksum","slice","_parseEnd","remainingLength","tell","extensions","_parseExtensions","puzzleData","grid","cell","index","c","GRBS","rebusSolution","RTBL","solution","RUSR","forEach","rusr","y","Math","floor","header","x","_extensions","_readClues","clues","push","_generateGridAndClues","answers","clueList","_isBlockCell","across","down","clueCount","clueListIndex","row","isBlockCell","clueNumber","_pluckSolutions","_flattenSolution","join","_unflattenSolution","_textChecksum","title","encode","author","copyright","clue","versionParts","Number","notes","_headerChecksum","Buffer","writeUInt8","writeUInt16LE","_globalChecksum","answer","_magicChecksum","answerChecksum","solutionChecksum","textChecksum","MAGIC_CHECKSUM_STRING","charCodeAt","_transposeGrid","gridString","match","RegExp","r","_restoreSolution","s","t","arr","shift","_shift","str","key","letterIndex","indexOf","_unshift","k","_everyOther","_unshuffle","substring","_unscrambleString","len","_shuffle","mid","chars","_scrambleString","_scrambledChecksum","transposed","replace","_validateChecksums","checksums","global","magic","errors","equals","_scrambleSolution","solutionGrid","solutionString","_unscrambleSolution","result","_writeHeader","globalChecksumBuffer","headerChecksumBuffer","magicChecksumBuffer","scrambledChecksumBuffer","unscrambledAnswer","fill","numberOfCluesBuffer","puzzleTypeBuffer","solutionStateBuffer","concat","_writeExtension","extensionBuffer","extensionName","lengthBuffer","checksumBuffer","_writeGRBS","answerArray","rebusSolutions","grbsBuffer","solutionInfo","cells","includes","_writeRTBL","rtblBuffer","Object","keys","_writeRUSR","userSolutionArray","rusrBuffer","_writeLTIM","_writeRebus","cellSolution","cellIndex","buffers","totalBufferLength","ltimBuffer","_parsePuzzle","path","numberOfCells","gridAndClues","validatePuzzle","puzzle","checksumResults","_getPuzzleData","Promise","resolve","reject","info","intro","formatExtra","userSolution","err","PUZParser","then","toJSON","unscrambledAnswerArray","scrambled","flattenedAnswerArray","flattenedUnscrambledAnswerArray","cluesArray","headerBuffer","answerStringBuffer","userSolutionStringBuffer","titleStringBuffer","authorStringBuffer","copyrightStringBuffer","cluesStringBuffer","notesStringBuffer","some","rebusBuffer","exports","module"],"mappings":";;;;;;;;;;;;;;AAAA;;;;;;AAOA,IAAMA,GAAG,GAAeC,OAAO,CAAC,YAAD,CAA/B;;AACA,IAAMC,GAAG,GAAeD,OAAO,CAAC,YAAD,CAA/B;;AACA,IAAME,KAAK,GAAaF,OAAO,CAAC,cAAD,CAA/B;;AACA,IAAMG,OAAO,GAAWH,OAAO,CAAC,gBAAD,CAA/B;;AACA,IAAMI,GAAG,GAAeJ,OAAO,CAAC,YAAD,CAA/B;;AACA,IAAMK,IAAI,GAAcL,OAAO,CAAC,aAAD,CAA/B;;AACA,IAAMM,MAAM,GAAYN,OAAO,CAAC,eAAD,CAA/B;;AACA,IAAMO,OAAO,GAAWP,OAAO,CAAC,gBAAD,CAA/B;;AACA,IAAMQ,QAAQ,GAAUR,OAAO,CAAC,iBAAD,CAA/B;;AACA,IAAMS,KAAK,GAAaT,OAAO,CAAC,cAAD,CAA/B;;AACA,IAAMU,OAAO,GAAWV,OAAO,CAAC,gBAAD,CAA/B;;AACA,IAAMW,OAAO,GAAWX,OAAO,CAAC,gBAAD,CAA/B;;AACA,IAAMY,IAAI,GAAcZ,OAAO,CAAC,aAAD,CAA/B;;AACA,IAAMa,KAAK,GAAab,OAAO,CAAC,YAAD,CAA/B;;AACA,IAAMc,SAAS,GAASd,OAAO,CAAC,kBAAD,CAA/B;;AACA,IAAMe,MAAM,GAAYf,OAAO,CAAC,WAAD,CAA/B;;AAGA,IAAMgB,gBAAgB,GAAG,GAAzB;AAEA,IAAMC,sBAAsB,GAAG,KAA/B;AAEA,IAAMC,uBAAuB,GAAG,CAAhC;AAEA,IAAMC,2BAA2B,GAAG,CAApC;AAEA,IAAMC,0BAA0B,GAAG,CAAnC;AAEA,IAAMC,oBAAoB,GAAG,CAA7B;AAEA,IAAMC,oBAAoB,GAAG,EAA7B;AAEA,IAAMC,sBAAsB,GAAG,CAA/B;AAEA,IAAMC,6BAA6B,GAAG,CAAtC;AAEA,IAAMC,yBAAyB,GAAG,CAAlC;AAEA,IAAMC,4BAA4B,GAAG,CAArC;AAEA,IAAMC,oBAAoB,GAAG,EAA7B;AAEA,IAAMC,8BAA8B,GAAG,CAAvC;AAEA,IAAMC,qBAAqB,GAAG,CAA9B;AAEA,IAAMC,iBAAiB,GAAG,CAA1B;AAEA,IAAMC,sBAAsB,GAAG,CAA/B;AAEA,IAAMC,WAAW,GAAG;AACnBC,EAAAA,MAAM,EAAE,MADW;AAEnBC,EAAAA,WAAW,EAAE;AAFM,CAApB;AAKA,IAAMC,cAAc,GAAG;AACtB;AACAC,EAAAA,QAAQ,EAAE,MAFY;AAGtB;AACAC,EAAAA,MAAM,EAAE;AAJc,CAAvB;AAOA,IAAMC,WAAW,GAAG;AACnBC,EAAAA,mBAAmB,EAAE,IADF;AAEnBC,EAAAA,kBAAkB,EAAE,IAFD;AAGnBC,EAAAA,WAAW,EAAE,IAHM;AAInBC,EAAAA,OAAO,EAAE;AAJU,CAApB;AAOA,IAAMC,IAAI,GAAG,4BAAb;AAEA,IAAMC,iBAAiB,GAAG,IAA1B;AAEA,IAAMC,iBAAiB,GAAG,IAA1B;;AAEA,SAASC,WAAT,CAAqBC,MAArB,EAA6BC,KAA7B,EAAoC;AACnC,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,MAAM,CAACG,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACvC;AACA,QAAME,MAAM,GAAGH,KAAK,GAAG,MAAvB;AAEAA,IAAAA,KAAK,GAAGA,KAAK,IAAI,CAAjB;;AAEA,QAAIG,MAAJ,EAAY;AACX;AACAH,MAAAA,KAAK,GAAGA,KAAK,GAAG,MAAhB;AACA,KATsC,CAWvC;AACA;;;AACAA,IAAAA,KAAK,GAAIA,KAAK,GAAGD,MAAM,CAACK,SAAP,CAAiBH,CAAjB,CAAT,GAAgC,MAAxC;AACA;;AAED,SAAOD,KAAP;AACA;;AAED,SAASK,WAAT,CAAqBC,MAArB,EAA6BC,OAA7B,EAAsC;AACrC,MAAMC,IAAI,GAAG,EAAb;AAEAA,EAAAA,IAAI,CAACC,cAAL,GAAsBH,MAAM,CAACI,WAAP,EAAtB;;AAEAJ,EAAAA,MAAM,CAACK,KAAP,CAAa,gBAAgBT,MAA7B,EAAqC;AAAEU,IAAAA,OAAO,EAAE;AAAX,GAArC;;AAEAJ,EAAAA,IAAI,CAACK,cAAL,GAAsBP,MAAM,CAACI,WAAP,EAAtB;AAEAF,EAAAA,IAAI,CAACM,aAAL,GAAqBR,MAAM,CAACS,WAAP,CAAmB3C,0BAAnB,CAArB;AAEAoC,EAAAA,IAAI,CAACQ,OAAL,GAAeV,MAAM,CAACW,WAAP,EAAf;AAEAT,EAAAA,IAAI,CAACU,QAAL,GAAgBZ,MAAM,CAACS,WAAP,CAAmB1C,oBAAnB,CAAhB;AAEAmC,EAAAA,IAAI,CAACW,iBAAL,GAAyBb,MAAM,CAACI,WAAP,EAAzB;AAEAF,EAAAA,IAAI,CAACY,QAAL,GAAgBd,MAAM,CAACS,WAAP,CAAmBzC,oBAAnB,CAAhB;AAEAkC,EAAAA,IAAI,CAACa,KAAL,GAAaf,MAAM,CAACgB,UAAP,EAAb;AAEAd,EAAAA,IAAI,CAACe,MAAL,GAAcjB,MAAM,CAACgB,UAAP,EAAd;AAEAd,EAAAA,IAAI,CAACgB,aAAL,GAAqBlB,MAAM,CAACI,WAAP,EAArB;AAEAF,EAAAA,IAAI,CAACiB,UAAL,GAAkBnB,MAAM,CAACI,WAAP,EAAlB;AAEAF,EAAAA,IAAI,CAACkB,aAAL,GAAqBpB,MAAM,CAACI,WAAP,EAArB;;AAEA,MAAIF,IAAI,CAACkB,aAAL,KAAuBvC,cAAc,CAACE,MAAtC,IAAgD,CAACkB,OAAO,CAACoB,WAA7D,EAA0E;AACzE,UAAM,IAAIC,KAAJ,CAAU,kEAAV,CAAN;AACA;;AAED,SAAOpB,IAAP;AACA;;AAED,SAASqB,iBAAT,CAA2BC,SAA3B,EAAsC;AACrC,MAAIA,SAAS,CAACC,IAAV,KAAmB,MAAvB,EAA+B;AAC9BD,IAAAA,SAAS,CAACE,KAAV,GAAkBjF,GAAG,CACpB+E,SAAS,CAACtB,IADU,EAEpB,UAACyB,CAAD,EAAO;AACN,UAAIA,CAAC,KAAK,CAAV,EAAa;AACZ,eAAO,IAAP;AACA;;AAED,aAAOA,CAAC,GAAG,CAAX;AACA,KARmB,CAArB;AAUA;;AAED,MAAIH,SAAS,CAACC,IAAV,KAAmB,MAAvB,EAA+B;AAC9BD,IAAAA,SAAS,CAACI,eAAV,GAA4B5E,MAAM,CACjCO,KAAK,CAACsE,MAAN,CAAaL,SAAS,CAACtB,IAAvB,EAA6B1C,SAAS,CAACsE,QAAvC,EAAiDC,KAAjD,CAAuD,GAAvD,CADiC,EAEjC,UAACC,SAAD,EAAYC,YAAZ,EAA6B;AAC5B,UAAMC,IAAI,GAAGD,YAAY,CAACF,KAAb,CAAmB,GAAnB,CAAb;AAEAG,MAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUC,QAAQ,CAACD,IAAI,CAAC,CAAD,CAAL,EAAU,EAAV,CAAlB;AAEAF,MAAAA,SAAS,CAACE,IAAI,CAAC,CAAD,CAAL,CAAT,GAAqBA,IAAI,CAAC,CAAD,CAAzB;AAEA,aAAOF,SAAP;AACA,KAVgC,EAWjC,EAXiC,CAAlC;AAaA;;AAED,MAAIR,SAAS,CAACC,IAAV,KAAmB,MAAvB,EAA+B;AAC9B,QAAMW,OAAO,GAAG7E,KAAK,CAACsE,MAAN,CAAaL,SAAS,CAACtB,IAAvB,EAA6B1C,SAAS,CAACsE,QAAvC,EAAiDC,KAAjD,CAAuD,GAAvD,CAAhB;AAEAP,IAAAA,SAAS,CAACa,MAAV,GAAmB;AAClBC,MAAAA,OAAO,EAAEH,QAAQ,CAACC,OAAO,CAAC,CAAD,CAAR,EAAa,EAAb,CADC;AAElBG,MAAAA,OAAO,EAAEH,OAAO,CAAC,CAAD,CAAP,KAAe;AAFN,KAAnB;AAIA;;AAED,MAAIZ,SAAS,CAACC,IAAV,KAAmB,MAAvB,EAA+B;AAC9BD,IAAAA,SAAS,CAACgB,WAAV,GAAwB/F,GAAG,CAC1B+E,SAAS,CAACtB,IADgB,EAE1B,UAACyB,CAAD,EAAO;AACN,aAAO;AACN1C,QAAAA,mBAAmB,EAAE,CAAC,EAAE0C,CAAC,GAAG3C,WAAW,CAACC,mBAAlB,CADhB;AAENC,QAAAA,kBAAkB,EAAE,CAAC,EAAEyC,CAAC,GAAG3C,WAAW,CAACE,kBAAlB,CAFf;AAGNC,QAAAA,WAAW,EAAE,CAAC,EAAEwC,CAAC,GAAG3C,WAAW,CAACG,WAAlB,CAHR;AAINC,QAAAA,OAAO,EAAE,CAAC,EAAEuC,CAAC,GAAG3C,WAAW,CAACI,OAAlB;AAJJ,OAAP;AAMA,KATyB,CAA3B;AAWA;;AAED,MAAIoC,SAAS,CAACC,IAAV,KAAmB,MAAvB,EAA+B;AAC9BD,IAAAA,SAAS,CAACiB,kBAAV,GAA+BhG,GAAG,CACjCc,KAAK,CAACsE,MAAN,CAAaL,SAAS,CAACtB,IAAvB,EAA6B1C,SAAS,CAACsE,QAAvC,EAAiDC,KAAjD,CAAuD,IAAvD,CADiC,EAEjC,UAACW,KAAD;AAAA,aAAWA,KAAK,KAAK,EAAV,GAAe,IAAf,GAAsBA,KAAjC;AAAA,KAFiC,CAAlC;AAIA;;AAED,SAAOlB,SAAP;AACA;;AAED,SAASmB,cAAT,CAAwB3C,MAAxB,EAAgC;AAC/B,MAAMwB,SAAS,GAAG,EAAlB;AAEAA,EAAAA,SAAS,CAACC,IAAV,GAAiBzB,MAAM,CAACW,WAAP,CAAmBpC,qBAAnB,CAAjB;;AAEA,MAAMqB,MAAM,GAAGI,MAAM,CAACI,WAAP,EAAf;;AAEAoB,EAAAA,SAAS,CAACoB,QAAV,GAAqB5C,MAAM,CAACI,WAAP,EAArB,CAP+B,CAS/B;;AACAoB,EAAAA,SAAS,CAACtB,IAAV,GAAiBF,MAAM,CAACS,WAAP,CAAmBb,MAAM,GAAG,CAA5B,CAAjB,CAV+B,CAW/B;;AACA4B,EAAAA,SAAS,CAACtB,IAAV,GAAiBsB,SAAS,CAACtB,IAAV,CAAe2C,KAAf,CAAqB,CAArB,EAAwB,CAAC,CAAzB,CAAjB;AAEA,SAAOtB,iBAAiB,CAACC,SAAD,CAAxB;AACA;;AAED,SAASsB,SAAT,CAAmB9C,MAAnB,EAA2BE,IAA3B,EAAiC;AAChC,MAAM6C,eAAe,GAAG/C,MAAM,CAAC1C,IAAP,KAAgB0C,MAAM,CAACgD,IAAP,EAAxC;;AAEA,MAAID,eAAe,IAAInF,uBAAvB,EAAgD;AAC/C,QAAM4D,SAAS,GAAGmB,cAAc,CAAC3C,MAAD,CAAhC;;AAEAE,IAAAA,IAAI,CAAC+C,UAAL,GAAkB/C,IAAI,CAAC+C,UAAL,IAAmB,EAArC;AACA/C,IAAAA,IAAI,CAAC+C,UAAL,CAAgBzB,SAAS,CAACC,IAA1B,IAAkCD,SAAlC;AAEA,WAAOA,SAAS,CAACC,IAAjB;;AAEAqB,IAAAA,SAAS,CAAC9C,MAAD,EAASE,IAAT,CAAT;AACA;AACD;;AAED,SAASgD,gBAAT,CAA0BlD,MAA1B,EAAkCmD,UAAlC,EAA8C;AAC7C,MAAMjD,IAAI,GAAG,EAAb;;AAEA4C,EAAAA,SAAS,CAAC9C,MAAD,EAASE,IAAT,CAAT;;AAEA,MAAIvD,GAAG,CAACuD,IAAD,EAAO,iBAAP,CAAP,EAAkC;AACjCnD,IAAAA,IAAI,CACHE,OAAO,CAACkG,UAAU,CAACC,IAAZ,CADJ,EAEH,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAChB,UAAMC,CAAC,GAAGF,IAAV;;AAEA,UAAInD,IAAI,CAAC+C,UAAL,CAAgBO,IAAhB,CAAqB9B,KAArB,CAA2B4B,KAA3B,MAAsC,IAA1C,EAAgD;AAC/C;AACA;;AAED,UAAMG,aAAa,GAAGvD,IAAI,CAAC+C,UAAL,CAAgBS,IAAhB,CAAqB9B,eAArB,CACrB1B,IAAI,CAAC+C,UAAL,CAAgBO,IAAhB,CAAqB9B,KAArB,CAA2B4B,KAA3B,CADqB,CAAtB;AAIAC,MAAAA,CAAC,CAACI,QAAF,GAAaF,aAAb;AACA,KAdE,CAAJ;AAgBA;;AAED,MAAI9G,GAAG,CAACuD,IAAD,EAAO,iBAAP,CAAP,EAAkC;AACjCA,IAAAA,IAAI,CAAC+C,UAAL,CAAgBW,IAAhB,CAAqBnB,kBAArB,CAAwCoB,OAAxC,CACC,UAACC,IAAD,EAAOR,KAAP,EAAiB;AAChB,UAAIQ,IAAI,KAAK,IAAb,EAAmB;AAClB,YAAMC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWX,KAAK,GAAGH,UAAU,CAACe,MAAX,CAAkBnD,KAArC,CAAV;AACA,YAAMoD,CAAC,GAAGb,KAAK,GAAGH,UAAU,CAACe,MAAX,CAAkBnD,KAApC;AAEAoC,QAAAA,UAAU,CAACQ,QAAX,CAAoBI,CAApB,EAAuBI,CAAvB,IAA4BL,IAA5B;AACA;AACD,KARF;AAUA;;AAEDX,EAAAA,UAAU,CAACiB,WAAX,GAAyBlE,IAAI,CAAC+C,UAA9B;AAEAE,EAAAA,UAAU,CAACd,MAAX,GAAoB1F,GAAG,CAACuD,IAAD,EAAO,wBAAP,CAAvB;AACA;;AAED,SAASmE,UAAT,CAAoBrE,MAApB,EAA4BkB,aAA5B,EAA2C;AAC1C,MAAMoD,KAAK,GAAG,EAAd;;AAEA,OAAK,IAAI3E,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuB,aAApB,EAAmCvB,CAAC,EAApC,EAAwC;AACvC2E,IAAAA,KAAK,CAACC,IAAN,CAAWvE,MAAM,CAACW,WAAP,EAAX;AACA;;AAED,SAAO2D,KAAP;AACA;;AAED,SAASE,qBAAT,CAA+BC,OAA/B,EAAwCC,QAAxC,EAAkD;AACjD,WAASC,YAAT,CAAsBR,CAAtB,EAAyBJ,CAAzB,EAA4B;AAC3B,WAAOU,OAAO,CAACV,CAAD,CAAP,CAAWI,CAAX,MAAkBzG,gBAAzB;AACA;;AAED,MAAM4G,KAAK,GAAG;AACbM,IAAAA,MAAM,EAAE,EADK;AAEbC,IAAAA,IAAI,EAAE;AAFO,GAAd;AAKA,MAAMzB,IAAI,GAAG,EAAb;AAEA,MAAMrC,KAAK,GAAG0D,OAAO,CAAC,CAAD,CAAP,CAAW7E,MAAzB;AAAA,MAAiCqB,MAAM,GAAGwD,OAAO,CAAC7E,MAAlD;AAEA,MAAIkF,SAAS,GAAG,CAAhB;AAEA,MAAIC,aAAa,GAAG,CAApB;;AAEA,OAAK,IAAIhB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG9C,MAApB,EAA4B8C,CAAC,EAA7B,EAAiC;AAChC,QAAMiB,GAAG,GAAG,EAAZ;;AAEA,SAAK,IAAIb,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGpD,KAApB,EAA2BoD,CAAC,EAA5B,EAAgC;AAC/B,UAAMd,IAAI,GAAG,EAAb;;AAEA,UAAIsB,YAAY,CAACR,CAAD,EAAIJ,CAAJ,CAAhB,EAAwB;AACvBV,QAAAA,IAAI,CAAC4B,WAAL,GAAmB,IAAnB;AACA,OAFD,MAGK;AACJ5B,QAAAA,IAAI,CAACM,QAAL,GAAgBc,OAAO,CAACV,CAAD,CAAP,CAAWI,CAAX,CAAhB;AAEA,YAAIU,IAAI,GAAG,KAAX;AAAA,YAAkBD,MAAM,GAAG,KAA3B;;AAEA,YACC,CACCT,CAAC,KAAK,CAAN,IACAQ,YAAY,CAACR,CAAC,GAAG,CAAL,EAAQJ,CAAR,CAFb,KAICI,CAAC,GAAG,CAAJ,GAAQpD,KAAR,IACA,CAAC4D,YAAY,CAACR,CAAC,GAAG,CAAL,EAAQJ,CAAR,CANf,EAQE;AACDa,UAAAA,MAAM,GAAG,IAAT;AACA;;AAED,YACC,CACCb,CAAC,KAAK,CAAN,IACAY,YAAY,CAACR,CAAD,EAAIJ,CAAC,GAAG,CAAR,CAFb,KAICA,CAAC,GAAG,CAAJ,GAAQ9C,MAAR,IACA,CAAC0D,YAAY,CAACR,CAAD,EAAIJ,CAAC,GAAG,CAAR,CANf,EAQE;AACDc,UAAAA,IAAI,GAAG,IAAP;AACA;;AAED,YAAID,MAAM,IAAIC,IAAd,EAAoB;AACnBxB,UAAAA,IAAI,CAAC6B,UAAL,GAAkB,EAAEJ,SAApB;AACA;;AAED,YAAIF,MAAJ,EAAY;AACXN,UAAAA,KAAK,CAACM,MAAN,CAAaE,SAAb,IAA0BJ,QAAQ,CAACK,aAAa,EAAd,CAAlC;AACA;;AAED,YAAIF,IAAJ,EAAU;AACTP,UAAAA,KAAK,CAACO,IAAN,CAAWC,SAAX,IAAwBJ,QAAQ,CAACK,aAAa,EAAd,CAAhC;AACA;AACD;;AAGDC,MAAAA,GAAG,CAACT,IAAJ,CAASlB,IAAT;AACA;;AAEDD,IAAAA,IAAI,CAACmB,IAAL,CAAUS,GAAV;AACA;;AAED,SAAO;AACN5B,IAAAA,IAAI,EAAJA,IADM;AAENkB,IAAAA,KAAK,EAALA;AAFM,GAAP;AAIA;;AAED,SAASa,eAAT,CAAyB/B,IAAzB,EAA+B;AAC9B,SAAOA,IAAI,CAAC3G,GAAL,CACN,UAACuI,GAAD;AAAA,WAASA,GAAG,CAACvI,GAAJ,CACR,UAAC4G,IAAD,EAAU;AACT,UAAIA,IAAI,CAAC4B,WAAT,EAAsB;AACrB,eAAOvH,gBAAP;AACA;;AAED,UAAI2F,IAAI,CAACM,QAAL,KAAkB,IAAtB,EAA4B;AAC3B,eAAO,GAAP;AACA;;AAED,aAAON,IAAI,CAACM,QAAZ;AACA,KAXO,CAAT;AAAA,GADM,CAAP;AAeA;;AAED,SAASyB,gBAAT,CAA0BzB,QAA1B,EAAoC;AACnC,SAAO1G,OAAO,CAAC0G,QAAD,CAAP,CAAkBlH,GAAlB,CACN,UAACiG,KAAD,EAAW;AACV,QAAIA,KAAK,KAAK,IAAd,EAAoB;AACnB,aAAOhF,gBAAP;AACA;;AAED,QAAIgF,KAAK,KAAK,EAAd,EAAkB;AACjB,aAAO,GAAP;AACA;;AAED,WAAOA,KAAK,CAAC,CAAD,CAAZ;AACA,GAXK,EAYL2C,IAZK,CAYA,EAZA,CAAP;AAaA;;AAED,SAASC,kBAAT,CAA4B3B,QAA5B,EAAsC5C,KAAtC,EAA6C;AAC5C,SAAO5D,KAAK,CACXwG,QAAQ,CAAC5B,KAAT,CAAe,EAAf,CADW,EAEXhB,KAFW,CAAL,CAGLtE,GAHK,CAIN,UAACuI,GAAD;AAAA,WAASA,GAAG,CAACvI,GAAJ,CACR,UAAC4G,IAAD;AAAA,aAAUA,IAAI,KAAK,GAAT,GAAe,EAAf,GAAoBA,IAA9B;AAAA,KADQ,CAAT;AAAA,GAJM,CAAP;AAQA;;AAED,SAASkC,aAAT,CAAuBpC,UAAvB,EAAmCP,QAAnC,EAA6C;AAC5C,MAAIO,UAAU,CAACqC,KAAf,EAAsB;AACrB5C,IAAAA,QAAQ,GAAGpD,WAAW,CAACjC,KAAK,CAACkI,MAAN,CAAatC,UAAU,CAACqC,KAAX,GAAmB,IAAhC,EAAsChI,SAAS,CAACsE,QAAhD,CAAD,EAA4Dc,QAA5D,CAAtB;AACA;;AAED,MAAIO,UAAU,CAACuC,MAAf,EAAuB;AACtB9C,IAAAA,QAAQ,GAAGpD,WAAW,CAACjC,KAAK,CAACkI,MAAN,CAAatC,UAAU,CAACuC,MAAX,GAAoB,IAAjC,EAAuClI,SAAS,CAACsE,QAAjD,CAAD,EAA6Dc,QAA7D,CAAtB;AACA;;AAGD,MAAIO,UAAU,CAACwC,SAAf,EAA0B;AACzB/C,IAAAA,QAAQ,GAAGpD,WAAW,CAACjC,KAAK,CAACkI,MAAN,CAAatC,UAAU,CAACwC,SAAX,GAAuB,IAApC,EAA0CnI,SAAS,CAACsE,QAApD,CAAD,EAAgEc,QAAhE,CAAtB;AACA;;AAEDO,EAAAA,UAAU,CAACuB,QAAX,CAAoBb,OAApB,CACC,UAAC+B,IAAD,EAAU;AACT,QAAIA,IAAJ,EAAU;AACThD,MAAAA,QAAQ,GAAGpD,WAAW,CAACjC,KAAK,CAACkI,MAAN,CAAaG,IAAb,EAAmBpI,SAAS,CAACsE,QAA7B,CAAD,EAAyCc,QAAzC,CAAtB;AACA;AACD,GALF;AAQA,MAAMiD,YAAY,GAAG1C,UAAU,CAACe,MAAX,CAAkBxD,OAAlB,CAA0BqB,KAA1B,CAAgC,GAAhC,EAAqCtF,GAArC,CAAyCqJ,MAAzC,CAArB,CAtB4C,CAuB5C;AACA;;AACA,MAAID,YAAY,CAAC,CAAD,CAAZ,IAAmB,CAAnB,IAAwBA,YAAY,CAAC,CAAD,CAAZ,IAAmB,CAA/C,EAAkD;AAAE;AACnD,QAAI1C,UAAU,CAAC4C,KAAf,EAAsB;AACrBnD,MAAAA,QAAQ,GAAGpD,WAAW,CAACjC,KAAK,CAACkI,MAAN,CAAatC,UAAU,CAAC4C,KAAX,GAAmB,IAAhC,EAAsCvI,SAAS,CAACsE,QAAhD,CAAD,EAA4Dc,QAA5D,CAAtB;AACA;AACD;;AAED,SAAOA,QAAP;AACA;;AAED,SAASoD,eAAT,CAAyB7C,UAAzB,EAAqCP,QAArC,EAA+C;AAC9C,MAAGA,QAAQ,WAAX,EAA2B;AAC1BA,IAAAA,QAAQ,GAAG,CAAX;AACA;;AAED,MAAMnD,MAAM,GAAG,IAAIwG,MAAJ,CAAWpI,2BAAX,CAAf;AAEA4B,EAAAA,MAAM,CAACyG,UAAP,CAAkB/C,UAAU,CAACe,MAAX,CAAkBnD,KAApC,EAA2C,CAA3C;AACAtB,EAAAA,MAAM,CAACyG,UAAP,CAAkB/C,UAAU,CAACe,MAAX,CAAkBjD,MAApC,EAA4C,CAA5C,EAR8C,CAS9C;;AACA;;AACAxB,EAAAA,MAAM,CAAC0G,aAAP,CAAqBhD,UAAU,CAACe,MAAX,CAAkBhD,aAAvC,EAAsD,CAAtD;AACAzB,EAAAA,MAAM,CAAC0G,aAAP,CAAqBhD,UAAU,CAACe,MAAX,CAAkB/C,UAAvC,EAAmD,CAAnD;AACA1B,EAAAA,MAAM,CAAC0G,aAAP,CAAqBhD,UAAU,CAACe,MAAX,CAAkB9C,aAAvC,EAAsD,CAAtD;AACA;;AAEA,SAAO5B,WAAW,CAACC,MAAD,EAASmD,QAAT,CAAlB;AACA;;AAED,SAASwD,eAAT,CAAyBjD,UAAzB,EAAqC5C,cAArC,EAAqD;AACpD,MAAIqC,QAAQ,GAAGrC,cAAc,WAAd,GAA+ByF,eAAe,CAAC7C,UAAD,CAA9C,GAA6D5C,cAA5E;AAEA,MAAId,MAAM,GAAGlC,KAAK,CAACkI,MAAN,CAAatC,UAAU,CAACkD,MAAxB,EAAgC7I,SAAS,CAACsE,QAA1C,CAAb;AAEAc,EAAAA,QAAQ,GAAGpD,WAAW,CAACC,MAAD,EAASmD,QAAT,CAAtB;AAEAnD,EAAAA,MAAM,GAAGlC,KAAK,CAACkI,MAAN,CAAatC,UAAU,CAACQ,QAAxB,EAAkCnG,SAAS,CAACsE,QAA5C,CAAT;AAEAc,EAAAA,QAAQ,GAAGpD,WAAW,CAACC,MAAD,EAASmD,QAAT,CAAtB;AAEAA,EAAAA,QAAQ,GAAG2C,aAAa,CAACpC,UAAD,EAAaP,QAAb,CAAxB;AAEA,SAAOA,QAAP;AACA;;AAED,SAAS0D,cAAT,CAAwBnD,UAAxB,EAAoC;AACnC,MAAM5C,cAAc,GAAGyF,eAAe,CAAC7C,UAAD,CAAtC;;AACA,MAAMoD,cAAc,GAAG/G,WAAW,CAACjC,KAAK,CAACkI,MAAN,CAAatC,UAAU,CAACkD,MAAxB,EAAgC7I,SAAS,CAACsE,QAA1C,CAAD,CAAlC;;AACA,MAAM0E,gBAAgB,GAAGhH,WAAW,CAACjC,KAAK,CAACkI,MAAN,CAAatC,UAAU,CAACQ,QAAxB,EAAkCnG,SAAS,CAACsE,QAA5C,CAAD,CAApC;;AACA,MAAM2E,YAAY,GAAGlB,aAAa,CAACpC,UAAD,CAAlC;;AAEA,MAAMuD,qBAAqB,GAAG,UAA9B;AAEA,MAAMlG,aAAa,GAAG,IAAIyF,MAAJ,CAAW;AAChC;AACAS,EAAAA,qBAAqB,CAACC,UAAtB,CAAiC,CAAjC,IAAuCpG,cAAc,GAAG,IAFxB,EAGhCmG,qBAAqB,CAACC,UAAtB,CAAiC,CAAjC,IAAuCJ,cAAc,GAAG,IAHxB,EAIhCG,qBAAqB,CAACC,UAAtB,CAAiC,CAAjC,IAAuCH,gBAAgB,GAAG,IAJ1B,EAKhCE,qBAAqB,CAACC,UAAtB,CAAiC,CAAjC,IAAuCF,YAAY,GAAG,IALtB,EAMhCC,qBAAqB,CAACC,UAAtB,CAAiC,CAAjC,IAAuC,CAACpG,cAAc,GAAG,MAAlB,KAA6B,CANpC,EAOhCmG,qBAAqB,CAACC,UAAtB,CAAiC,CAAjC,IAAuC,CAACJ,cAAc,GAAG,MAAlB,KAA6B,CAPpC,EAQhCG,qBAAqB,CAACC,UAAtB,CAAiC,CAAjC,IAAuC,CAACH,gBAAgB,GAAG,MAApB,KAA+B,CARtC,EAShCE,qBAAqB,CAACC,UAAtB,CAAiC,CAAjC,IAAuC,CAACF,YAAY,GAAG,MAAhB,KAA2B;AAClE;AAVgC,GAAX,CAAtB;AAcA,SAAOjG,aAAP;AACA;;AAED,SAASoG,cAAT,CAAwBC,UAAxB,EAAoC9F,KAApC,EAA2CE,MAA3C,EAAmD;AAClD,MAAMf,IAAI,GAAG2G,UAAU,CAACC,KAAX,CAAiB,IAAIC,MAAJ,CAAW,SAAShG,KAAT,GAAiB,GAA5B,EAAiC,GAAjC,CAAjB,CAAb;AAEA,SAAOnE,KAAK,CAACmE,KAAD,CAAL,CAAatE,GAAb,CACN,UAAC8G,CAAD;AAAA,WAAO3G,KAAK,CAACqE,MAAD,CAAL,CAAcxE,GAAd,CACN,UAACuK,CAAD;AAAA,aAAO9G,IAAI,CAAC8G,CAAD,CAAJ,CAAQzD,CAAR,CAAP;AAAA,KADM,EAEL8B,IAFK,CAEA,EAFA,CAAP;AAAA,GADM,EAILA,IAJK,CAIA,EAJA,CAAP;AAKA;;AAED,SAAS4B,gBAAT,CAA0BC,CAA1B,EAA6BC,CAA7B,EAAgC;AAC/B;;;;;;;;AAWAA,EAAAA,CAAC,GAAGA,CAAC,CAACpF,KAAF,CAAQ,EAAR,CAAJ;AAEA,SAAOmF,CAAC,CAACnF,KAAF,CAAQ,EAAR,EAAY/E,MAAZ,CACN,UAACoK,GAAD,EAAM7D,CAAN,EAAY;AACX,QAAIA,CAAC,KAAK7F,gBAAV,EAA4B;AAC3B0J,MAAAA,GAAG,CAAC7C,IAAJ,CAAShB,CAAT;AACA,KAFD,MAGK;AACJ6D,MAAAA,GAAG,CAAC7C,IAAJ,CAAS4C,CAAC,CAACE,KAAF,EAAT;AACA;;AAED,WAAOD,GAAP;AACA,GAVK,EAWN,EAXM,EAYL/B,IAZK,CAYA,EAZA,CAAP;AAaA;;AAED,SAASiC,MAAT,CAAgBC,GAAhB,EAAqBC,GAArB,EAA0B;AACzB,SAAOD,GAAG,CAACxF,KAAJ,CAAU,EAAV,EAActF,GAAd,CACN,UAAC8G,CAAD,EAAID,KAAJ,EAAc;AACb,QAAImE,WAAW,GAAG,CAACpI,IAAI,CAACqI,OAAL,CAAanE,CAAb,IAAkBuC,MAAM,CAAC0B,GAAG,CAAClE,KAAK,GAAGkE,GAAG,CAAC5H,MAAb,CAAJ,CAAzB,IAAsDP,IAAI,CAACO,MAA7E;;AAEA,QAAI6H,WAAW,GAAG,CAAlB,EAAqB;AACpBA,MAAAA,WAAW,GAAGpI,IAAI,CAACO,MAAL,GAAc6H,WAA5B;AACA;;AAED,WAAOpI,IAAI,CAACoI,WAAD,CAAX;AACA,GATK,EAULpC,IAVK,CAUA,EAVA,CAAP;AAWA;;AAED,SAASsC,QAAT,CAAkBJ,GAAlB,EAAuBC,GAAvB,EAA4B;AAC3B,SAAOF,MAAM,CACZC,GADY,EAEZ9K,GAAG,CAAC+K,GAAD,EAAM,UAACI,CAAD;AAAA,WAAO,CAACA,CAAR;AAAA,GAAN,CAFS,CAAb;AAIA;;AAED,SAASC,WAAT,CAAqBN,GAArB,EAA0B;AACzB,SAAOA,GAAG,CAACxF,KAAJ,CAAU,EAAV,EAAc/E,MAAd,CACN,UAACoK,GAAD,EAAM7D,CAAN,EAAS5D,CAAT,EAAe;AACd;AACA,QAAIA,CAAC,GAAG,CAAJ,KAAU,CAAd,EAAiB;AAChByH,MAAAA,GAAG,CAAC7C,IAAJ,CAAShB,CAAT;AACA;;AAED,WAAO6D,GAAP;AACA,GARK,EASN,EATM,EAUL/B,IAVK,CAUA,EAVA,CAAP;AAWA;;AAED,SAASyC,UAAT,CAAoBP,GAApB,EAAyB;AACxB,SAAOM,WAAW,CAACN,GAAG,CAACQ,SAAJ,CAAc,CAAd,CAAD,CAAX,GAAgCF,WAAW,CAACN,GAAD,CAAlD;AACA;;AAED,SAASS,iBAAT,CAA2BT,GAA3B,EAAgCC,GAAhC,EAAqC;AACpC,MAAMS,GAAG,GAAGV,GAAG,CAAC3H,MAAhB;AAEA/C,EAAAA,OAAO,CAACK,QAAQ,CAACsK,GAAD,EAAMhJ,iBAAN,EAAyB,GAAzB,CAAR,CAAsCuD,KAAtC,CAA4C,EAA5C,CAAD,CAAP,CAAyD8B,OAAzD,CACC,UAAC+D,CAAD,EAAO;AACNL,IAAAA,GAAG,GAAGO,UAAU,CAACP,GAAD,CAAhB;AACAA,IAAAA,GAAG,GAAGA,GAAG,CAACQ,SAAJ,CAAcE,GAAG,GAAGL,CAApB,IAAyBL,GAAG,CAACQ,SAAJ,CAAc,CAAd,EAAiBE,GAAG,GAAGL,CAAvB,CAA/B;AACAL,IAAAA,GAAG,GAAGI,QAAQ,CAACJ,GAAD,EAAMC,GAAN,CAAd;AACA,GALF;AAQA,SAAOD,GAAP;AACA;;AAGD,SAASW,QAAT,CAAkBX,GAAlB,EAAuB;AACtB;AACA,MAAMY,GAAG,GAAGnE,IAAI,CAACC,KAAL,CAAWsD,GAAG,CAAC3H,MAAJ,GAAa,CAAxB,CAAZ;AAEA,SAAO9C,GAAG,CACTyK,GAAG,CAACQ,SAAJ,CAAcI,GAAd,EAAmBpG,KAAnB,CAAyB,EAAzB,CADS,EAETwF,GAAG,CAACQ,SAAJ,CAAc,CAAd,EAAiBI,GAAjB,EAAsBpG,KAAtB,CAA4B,EAA5B,CAFS,CAAH,CAGL/E,MAHK,CAIN,UAACoK,GAAD,EAAMgB,KAAN,EAAgB;AACf,QAAIA,KAAK,CAAC,CAAD,CAAL,eAA0BA,KAAK,CAAC,CAAD,CAAL,WAA9B,EAAsD;AACrD,aAAOhB,GAAP;AACA;;AAEDA,IAAAA,GAAG,CAAC7C,IAAJ,CAAS6D,KAAK,CAAC,CAAD,CAAL,GAAWA,KAAK,CAAC,CAAD,CAAzB;AAEA,WAAOhB,GAAP;AACA,GAZK,EAaN,EAbM,CAcP;AAdO,IAeL/B,IAfK,CAeA,EAfA,KAeOkC,GAAG,CAAC3H,MAAJ,GAAa,CAAb,GAAiB2H,GAAG,CAACA,GAAG,CAAC3H,MAAJ,GAAa,CAAd,CAApB,GAAuC,EAf9C,CAAP;AAgBA;;AAED,SAASyI,eAAT,CAAyBd,GAAzB,EAA8BC,GAA9B,EAAmC;AAClC;;;;;;;;;;AAaAzK,EAAAA,IAAI,CACHG,QAAQ,CAACsK,GAAD,EAAMhJ,iBAAN,EAAyB,GAAzB,CADL,EAEH,UAACoJ,CAAD,EAAO;AACNL,IAAAA,GAAG,GAAGD,MAAM,CAACC,GAAD,EAAMC,GAAN,CAAZ;AACAD,IAAAA,GAAG,GAAGA,GAAG,CAACQ,SAAJ,CAAcH,CAAd,IAAmBL,GAAG,CAACQ,SAAJ,CAAc,CAAd,EAAiBH,CAAjB,CAAzB;AACAL,IAAAA,GAAG,GAAGW,QAAQ,CAACX,GAAD,CAAd;AACA,GANE,CAAJ;AASA,SAAOA,GAAP;AACA;;AAED,SAASe,kBAAT,CAA4BjC,MAA5B,EAAoCtF,KAApC,EAA2CE,MAA3C,EAAmD;AAClD,MAAMsH,UAAU,GAAG3B,cAAc,CAChCxB,gBAAgB,CAACiB,MAAD,CADgB,EAEhCtF,KAFgC,EAGhCE,MAHgC,CAAd,CAIjBuH,OAJiB,CAIT7K,sBAJS,EAIe,EAJf,CAAnB;;AAMA,SAAO6B,WAAW,CAACjC,KAAK,CAACkI,MAAN,CAAa8C,UAAb,EAAyB/K,SAAS,CAACsE,QAAnC,CAAD,CAAlB;AACA;;AAED,SAAS2G,kBAAT,CAA4BtF,UAA5B,EAAwC;AACvC,MAAM5C,cAAc,GAAGyF,eAAe,CAAC7C,UAAD,CAAtC;;AAEA,MAAMhD,cAAc,GAAGiG,eAAe,CAACjD,UAAD,EAAa5C,cAAb,CAAtC;;AAEA,MAAMC,aAAa,GAAG8F,cAAc,CAACnD,UAAD,CAApC;;AAEA,MAAMuF,SAAS,GAAG;AACjBxE,IAAAA,MAAM,EAAE3D,cADS;AAEjBoI,IAAAA,MAAM,EAAExI,cAFS;AAGjByI,IAAAA,KAAK,EAAEpI;AAHU,GAAlB;AAMA,MAAMqI,MAAM,GAAG,EAAf;;AAEA,MAAIH,SAAS,CAACxE,MAAV,KAAqBf,UAAU,CAACe,MAAX,CAAkB3D,cAA3C,EAA2D;AAC1DsI,IAAAA,MAAM,CAACtE,IAAP,CAAY,+BAAZ;AACA;;AAED,MAAImE,SAAS,CAACC,MAAV,KAAqBxF,UAAU,CAACe,MAAX,CAAkB/D,cAA3C,EAA2D;AAC1D0I,IAAAA,MAAM,CAACtE,IAAP,CAAY,+BAAZ;AACA;;AAED,MAAI,CAACmE,SAAS,CAACE,KAAV,CAAgBE,MAAhB,CAAuB3F,UAAU,CAACe,MAAX,CAAkB1D,aAAzC,CAAL,EAA8D;AAC7DqI,IAAAA,MAAM,CAACtE,IAAP,CAAY,8BAAZ;AACA;;AAEDxH,EAAAA,IAAI,CACHoG,UAAU,CAACiB,WADR,EAEH,UAAC5C,SAAD,EAAYC,IAAZ,EAAqB;AACpB,QAAID,SAAS,CAACoB,QAAV,KAAuBpD,WAAW,CAACgC,SAAS,CAACtB,IAAX,CAAtC,EAAwD;AACvD2I,MAAAA,MAAM,CAACtE,IAAP,kCAAsC9C,IAAtC;AACA;AACD,GANE,CAAJ;AASA,SAAOoH,MAAP;AACA;;AAED,SAASE,iBAAT,CAA2BC,YAA3B,EAAyCxB,GAAzC,EAA8C;AAC7C,MAAMvG,MAAM,GAAG+H,YAAY,CAACpJ,MAA5B;AACA,MAAMmB,KAAK,GAAGiI,YAAY,CAAC,CAAD,CAAZ,CAAgBpJ,MAA9B;AAEA,MAAIqJ,cAAc,GAAGhM,OAAO,CAC3BmI,gBAAgB,CAAC4D,YAAD,CADW,CAAP,CAEnB3D,IAFmB,CAEd,EAFc,CAArB;;AAIA,MAAMkD,UAAU,GAAG3B,cAAc,CAACqC,cAAD,EAAiBlI,KAAjB,EAAwBE,MAAxB,CAAjC;;AAEA,MAAMf,IAAI,GAAG+G,gBAAgB,CAC5BsB,UAD4B,EAE5BF,eAAe,CAACE,UAAU,CAACC,OAAX,CAAmB7K,sBAAnB,EAA2C,EAA3C,CAAD,EAAiD6J,GAAjD,CAFa,CAA7B;;AAKAyB,EAAAA,cAAc,GAAGrC,cAAc,CAAC1G,IAAD,EAAOe,MAAP,EAAeF,KAAf,CAA/B;AAEA,SAAO5D,KAAK,CAAC8L,cAAc,CAAClH,KAAf,CAAqB,EAArB,CAAD,EAA2BhB,KAA3B,CAAZ;AACA;;AAED,SAASmI,mBAAT,CAA6B/F,UAA7B,EAAyCqE,GAAzC,EAA8C;AAC7C,MAAMe,UAAU,GAAG3B,cAAc,CAChCzD,UAAU,CAACkD,MADqB,EAEhClD,UAAU,CAACe,MAAX,CAAkBnD,KAFc,EAGhCoC,UAAU,CAACe,MAAX,CAAkBjD,MAHc,CAAjC;;AAMA,MAAMf,IAAI,GAAG+G,gBAAgB,CAC5BsB,UAD4B,EAE5BP,iBAAiB,CAChBO,UAAU,CAACC,OAAX,CAAmB7K,sBAAnB,EAA2C,EAA3C,CADgB,EAEhB6J,GAFgB,CAFW,CAA7B;;AAQA,MAAM2B,MAAM,GAAGvC,cAAc,CAC5B1G,IAD4B,EAE5BiD,UAAU,CAACe,MAAX,CAAkBjD,MAFU,EAG5BkC,UAAU,CAACe,MAAX,CAAkBnD,KAHU,CAA7B;;AAMA,MAAIoI,MAAM,KAAKhG,UAAU,CAACkD,MAA1B,EAAkC;AACjC,UAAM,IAAI/E,KAAJ,CAAU,4EAAV,CAAN;AACA;;AAED,SAAO6H,MAAP;AACA;;AAED,SAASC,YAAT,CAAsBjG,UAAtB,EAAkClD,OAAlC,EAA2C;AAC1C,MAAMoJ,oBAAoB,GAAG,IAAIpD,MAAJ,CAAWhI,sBAAX,CAA7B;AAEAoL,EAAAA,oBAAoB,CAAClD,aAArB,CAAmCC,eAAe,CAACjD,UAAD,CAAlD;AAEA,MAAMmG,oBAAoB,GAAG,IAAIrD,MAAJ,CAAWhI,sBAAX,CAA7B;AAEAqL,EAAAA,oBAAoB,CAACnD,aAArB,CAAmCH,eAAe,CAAC7C,UAAD,CAAlD;;AAEA,MAAMoG,mBAAmB,GAAGjD,cAAc,CAACnD,UAAD,CAA1C;;AAEA,MAAMqG,uBAAuB,GAAG,IAAIvD,MAAJ,CAAWhI,sBAAX,CAAhC;;AAEA,MAAItB,GAAG,CAACsD,OAAD,EAAU,WAAV,CAAP,EAA+B;AAC9BuJ,IAAAA,uBAAuB,CAACrD,aAAxB,CACCmC,kBAAkB,CACjBnF,UAAU,CAACsG,iBADM,EAEjBtG,UAAU,CAACe,MAAX,CAAkBnD,KAFD,EAGjBoC,UAAU,CAACe,MAAX,CAAkBjD,MAHD,CADnB;AAOA,GARD,MASK;AACJuI,IAAAA,uBAAuB,CAACE,IAAxB,CAA6B,GAA7B;AACA;;AAED,MAAMC,mBAAmB,GAAG,IAAI1D,MAAJ,CAAW/H,6BAAX,CAA5B;AAEAyL,EAAAA,mBAAmB,CAACxD,aAApB,CAAkChD,UAAU,CAACe,MAAX,CAAkBhD,aAApD;AAEA,MAAM0I,gBAAgB,GAAG,IAAI3D,MAAJ,CAAW9H,yBAAX,CAAzB;AAEAyL,EAAAA,gBAAgB,CAACzD,aAAjB,CAA+BhD,UAAU,CAACe,MAAX,CAAkB/C,UAAjD;AAEA,MAAM0I,mBAAmB,GAAG,IAAI5D,MAAJ,CAAW7H,4BAAX,CAA5B;AAEAyL,EAAAA,mBAAmB,CAAC1D,aAApB,CAAkChD,UAAU,CAACe,MAAX,CAAkB9C,aAApD;AAEA,SAAO6E,MAAM,CAAC6D,MAAP,CACN,CACCT,oBADD,EAEC9L,KAAK,CAACkI,MAAN,CAAa,eAAb,EAA8BjI,SAAS,CAACsE,QAAxC,CAFD,EAGCwH,oBAHD,EAICC,mBAJD,EAKChM,KAAK,CAACkI,MAAN,CAAa9I,GAAG,CAACsD,OAAD,EAAU,SAAV,EAAqBkD,UAAU,CAACe,MAAX,CAAkBxD,OAAvC,CAAH,GAAqD,IAAlE,EAAwElD,SAAS,CAACsE,QAAlF,CALD,EAMC;AACA,MAAImE,MAAJ,CAAW,CAAC,GAAD,EAAM,GAAN,CAAX,CAPD,EAQCuD,uBARD,EASC;AACA,MAAIvD,MAAJ,CAAWjI,oBAAX,EAAiC0L,IAAjC,CAAsC,GAAtC,CAVD,EAWC,IAAIzD,MAAJ,CAAW,CAAC9C,UAAU,CAACe,MAAX,CAAkBnD,KAAnB,CAAX,CAXD,EAYC,IAAIkF,MAAJ,CAAW,CAAC9C,UAAU,CAACe,MAAX,CAAkBjD,MAAnB,CAAX,CAZD,EAaC0I,mBAbD,EAcCC,gBAdD,EAeCC,mBAfD,CADM,EAkBNxL,oBAlBM,CAAP;AAoBA;;AAED,SAAS0L,eAAT,CAAyBC,eAAzB,EAA0CC,aAA1C,EAAyD;AACxD,MAAMC,YAAY,GAAG,IAAIjE,MAAJ,CAAW3H,8BAAX,CAArB;AACA4L,EAAAA,YAAY,CAAC/D,aAAb,CAA2B6D,eAAe,CAACpK,MAA3C;AAEA,MAAMuK,cAAc,GAAG,IAAIlE,MAAJ,CAAWhI,sBAAX,CAAvB;AACAkM,EAAAA,cAAc,CAAChE,aAAf,CAA6B3G,WAAW,CAACwK,eAAD,CAAxC;AAEA,SAAO/D,MAAM,CAAC6D,MAAP,CACN,CACCvM,KAAK,CAACkI,MAAN,CAAawE,aAAb,EAA4BzM,SAAS,CAACsE,QAAtC,CADD,EAECoI,YAFD,EAGCC,cAHD,EAICH,eAJD,EAKC,IAAI/D,MAAJ,CAAW,CAAC,CAAD,CAAX,CALD,CADM,EAQN1H,qBAAqB,GAAGD,8BAAxB,GAAyDL,sBAAzD,GAAkF+L,eAAe,CAACpK,MAAlG,GAA2G,CARrG,CAAP;AAUA;;AAED,SAASwK,UAAT,CAAoBC,WAApB,EAAiCC,cAAjC,EAAiD;AAChD,MAAMC,UAAU,GAAG,IAAItE,MAAJ,CAClBoE,WAAW,CAAC5N,GAAZ,CACC,UAAC4G,IAAD,EAAOC,KAAP,EAAiB;AAChB,QAAMjC,WAAW,GAAGjE,OAAO,CAC1BkN,cAD0B,EAE1B,UAACE,YAAD;AAAA,aAAkBA,YAAY,CAACC,KAAb,CAAmBC,QAAnB,CAA4BpH,KAA5B,CAAlB;AAAA,KAF0B,CAA3B;;AAKA,QAAIjC,WAAW,WAAf,EAA+B;AAC9B,aAAO,CAAP;AACA;;AAED,WAAOc,QAAQ,CAACd,WAAD,EAAc,EAAd,CAAR,GAA4B,CAAnC;AACA,GAZF,CADkB,CAAnB;AAiBA,SAAO0I,eAAe,CAACQ,UAAD,EAAa,MAAb,CAAtB;AACA;;AAED,SAASI,UAAT,CAAoBL,cAApB,EAAoC;AACnC,MAAMM,UAAU,GAAGrN,KAAK,CAACkI,MAAN,CAClBoF,MAAM,CAACC,IAAP,CAAYR,cAAZ,EAA4B7N,GAA5B,CACC,UAAC+K,GAAD;AAAA,qBAAYtK,QAAQ,CAACsK,GAAD,EAAM/I,sBAAN,EAA8B,GAA9B,CAApB,cAA0D6L,cAAc,CAAC9C,GAAD,CAAd,CAAoB7D,QAA9E;AAAA,GADD,EAEE0B,IAFF,CAEO,EAFP,CADkB,EAIlB7H,SAAS,CAACsE,QAJQ,CAAnB;AAOA,SAAOiI,eAAe,CAACa,UAAD,EAAa,MAAb,CAAtB;AACA;;AAED,SAASG,UAAT,CAAoBC,iBAApB,EAAuC;AACtC,MAAMC,UAAU,GAAG1N,KAAK,CAACkI,MAAN,CAClBuF,iBAAiB,CAACvO,GAAlB,CACC,UAACkH,QAAD,EAAc;AACb,QAAIA,QAAQ,CAAC/D,MAAT,GAAkB,CAAtB,EAAyB;AACxB,uBAAU+D,QAAV;AACA;;AAED,WAAO,IAAP;AACA,GAPF,EAQE0B,IARF,CAQO,EARP,CADkB,EAUlB7H,SAAS,CAACsE,QAVQ,CAAnB;AAaA,SAAOiI,eAAe,CAACkB,UAAD,EAAa,MAAb,CAAtB;AACA;;AAED,SAASC,UAAT,CAAoB7I,MAApB,EAA4B;AAC3B,SAAO0H,eAAe,CACrBxM,KAAK,CAACkI,MAAN,WACIpD,MAAM,CAACC,OADX,cACsBD,MAAM,CAACE,OAAP,GAAiB,GAAjB,GAAuB,GAD7C,GAEC/E,SAAS,CAACsE,QAFX,CADqB,EAKrB,MALqB,CAAtB;AAOA;;AAED,SAASqJ,WAAT,CAAqBd,WAArB,EAAkCW,iBAAlC,EAAqD/H,UAArD,EAAiE;AAChE,MAAI5B,WAAW,GAAG,CAAlB;AAEA,MAAMiJ,cAAc,GAAGrN,OAAO,CAACoN,WAAD,CAAP,CAAqBrN,MAArB,CACtB,UAACgF,SAAD,EAAYoJ,YAAZ,EAA0BC,SAA1B,EAAwC;AACvC,QAAID,YAAY,IAAIA,YAAY,CAACxL,MAAb,GAAsB,CAA1C,EAA6C;AAC5C,UAAM4H,GAAG,GAAGpK,OAAO,CAAC4E,SAAD,EAAY;AAAC2B,QAAAA,QAAQ,EAAEyH;AAAX,OAAZ,CAAnB;;AAEA,UAAI5D,GAAG,WAAP,EAAuB;AACtBxF,QAAAA,SAAS,CAAC,EAAEX,WAAH,CAAT,GAA2B;AAC1BsC,UAAAA,QAAQ,EAAEyH,YADgB;AAE1BX,UAAAA,KAAK,EAAE,CAACY,SAAD;AAFmB,SAA3B;AAIA,OALD,MAMK;AACJrJ,QAAAA,SAAS,CAACwF,GAAD,CAAT,CAAeiD,KAAf,CAAqBlG,IAArB,CAA0B8G,SAA1B;AACA;AACD;;AAED,WAAOrJ,SAAP;AACA,GAjBqB,EAkBtB,EAlBsB,CAAvB;;AAqBA,MAAMuI,UAAU,GAAGH,UAAU,CAACC,WAAD,EAAcC,cAAd,CAA7B;;AAEA,MAAMM,UAAU,GAAGD,UAAU,CAACL,cAAD,CAA7B;;AAEA,MAAMW,UAAU,GAAGF,UAAU,CAACC,iBAAD,CAA7B;;AAEA,MAAMM,OAAO,GAAG,CACff,UADe,EAEfK,UAFe,EAGfK,UAHe,CAAhB;AAMA,MAAIM,iBAAiB,GAAGhB,UAAU,CAAC3K,MAAX,GAAoBgL,UAAU,CAAChL,MAA/B,GAAwCqL,UAAU,CAACrL,MAA3E;;AAEA,MAAIqD,UAAU,CAACZ,MAAf,EAAuB;AACtB,QAAMmJ,UAAU,GAAGN,UAAU,CAACjI,UAAU,CAACZ,MAAZ,CAA7B;;AACAiJ,IAAAA,OAAO,CAAC/G,IAAR,CAAaiH,UAAb;AAEAD,IAAAA,iBAAiB,IAAIC,UAAU,CAAC5L,MAAhC;AACA;;AAED,SAAOqG,MAAM,CAAC6D,MAAP,CACNwB,OADM,EAENC,iBAFM,CAAP;AAIA;;AAED,SAASE,YAAT,CAAsBC,IAAtB,EAA4BzL,OAA5B,EAAqC;AACpC,MAAMC,IAAI,GAAG,EAAb;AAEA,MAAMF,MAAM,GAAG,IAAIxC,SAAJ,CAAckO,IAAd,CAAf;AAEAxL,EAAAA,IAAI,CAACgE,MAAL,GAAcnE,WAAW,CAACC,MAAD,EAASC,OAAT,CAAzB;AAEA,MAAM0L,aAAa,GAAGzL,IAAI,CAACgE,MAAL,CAAYnD,KAAZ,GAAoBb,IAAI,CAACgE,MAAL,CAAYjD,MAAtD;AAEAf,EAAAA,IAAI,CAACmG,MAAL,GAAcrG,MAAM,CAACW,WAAP,CAAmBgL,aAAnB,CAAd;;AAEA,MAAIzL,IAAI,CAACgE,MAAL,CAAY9C,aAAZ,KAA8BvC,cAAc,CAACE,MAAjD,EAAyD;AACxDmB,IAAAA,IAAI,CAACuJ,iBAAL,GAAyBP,mBAAmB,CAC3C;AACChF,MAAAA,MAAM,EAAEhE,IAAI,CAACgE,MADd;AAECmC,MAAAA,MAAM,EAAEnG,IAAI,CAACmG;AAFd,KAD2C,EAK3CpG,OAAO,CAACoB,WALmC,CAA5C;AAOA,GARD,MASK;AACJnB,IAAAA,IAAI,CAACuJ,iBAAL,GAAyBvJ,IAAI,CAACmG,MAA9B;AACA;;AAEDnG,EAAAA,IAAI,CAACyD,QAAL,GAAgB3D,MAAM,CAACW,WAAP,CAAmBgL,aAAnB,CAAhB;AAEAzL,EAAAA,IAAI,CAACsF,KAAL,GAAaxF,MAAM,CAACW,WAAP,EAAb;AAEAT,EAAAA,IAAI,CAACwF,MAAL,GAAc1F,MAAM,CAACW,WAAP,EAAd;AAEAT,EAAAA,IAAI,CAACyF,SAAL,GAAiB3F,MAAM,CAACW,WAAP,EAAjB;AAEAT,EAAAA,IAAI,CAACwE,QAAL,GAAgBL,UAAU,CAACrE,MAAD,EAASE,IAAI,CAACgE,MAAL,CAAYhD,aAArB,CAA1B;;AAEA,MAAM0K,YAAY,GAAGpH,qBAAqB,CACzCc,kBAAkB,CAACpF,IAAI,CAACuJ,iBAAN,EAAyBvJ,IAAI,CAACgE,MAAL,CAAYnD,KAArC,CADuB,EAEzCb,IAAI,CAACwE,QAFoC,CAA1C;;AAKAxE,EAAAA,IAAI,CAACkD,IAAL,GAAYwI,YAAY,CAACxI,IAAzB;AACAlD,EAAAA,IAAI,CAACoE,KAAL,GAAasH,YAAY,CAACtH,KAA1B;AAEApE,EAAAA,IAAI,CAAC6F,KAAL,GAAa/F,MAAM,CAACW,WAAP,EAAb;;AAECuC,EAAAA,gBAAgB,CAAClD,MAAD,EAASE,IAAT,CAAhB;;AAEA,SAAOA,IAAP;AACD;;AAED,SAAS2L,cAAT,CAAwBC,MAAxB,EAAgC;AAC/B,MAAMC,eAAe,GAAGtD,kBAAkB,CAACqD,MAAD,CAA1C;;AAEA,MAAMjD,MAAM,GAAG,EAAf;;AAEA,MAAIkD,eAAJ,EAAqB;AACpBlD,IAAAA,MAAM,CAACtE,IAAP,OAAAsE,MAAM,qBAASkD,eAAT,EAAN;AACA;;AAED,SAAOlD,MAAM,CAACjJ,MAAP,KAAkB,CAAlB,YAAkCiJ,MAAzC;AACA;;AAED,SAASmD,cAAT,CAAwBN,IAAxB,EAA8BzL,OAA9B,EAAuC;AACtC,SAAO,IAAIgM,OAAJ,CACN,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpB,QAAI;AACH,UAAMhJ,UAAU,GAAGsI,YAAY,CAACC,IAAD,EAAOzL,OAAP,CAA/B;;AAEA,UAAM4I,MAAM,GAAGgD,cAAc,CAAC1I,UAAD,CAA7B;;AAEA,UAAI0F,MAAM,WAAV,EAA0B;AACzBsD,QAAAA,MAAM,8BAAuBtD,MAAM,CAACxD,IAAP,CAAY,MAAZ,CAAvB,EAAN;AACA,OAFD,MAGK;AACJ6G,QAAAA,OAAO,CAAC;AACPE,UAAAA,IAAI,EAAE;AACL5G,YAAAA,KAAK,EAAErC,UAAU,CAACqC,KAAX,UADF;AAELE,YAAAA,MAAM,EAAEvC,UAAU,CAACuC,MAAX,UAFH;AAGLC,YAAAA,SAAS,EAAExC,UAAU,CAACwC,SAAX,UAHN;AAIL0G,YAAAA,KAAK,EAAElJ,UAAU,CAAC4C,KAAX,UAJF;AAKLuG,YAAAA,WAAW,EAAE;AACZ5L,cAAAA,OAAO,EAAEyC,UAAU,CAACe,MAAX,CAAkBxD;AADf;AALR,WADC;AAUP0C,UAAAA,IAAI,EAAED,UAAU,CAACC,IAVV;AAWPkB,UAAAA,KAAK,EAAEnB,UAAU,CAACmB,KAXX;AAYPiI,UAAAA,YAAY,EAAEjH,kBAAkB,CAACnC,UAAU,CAACQ,QAAZ,EAAsBR,UAAU,CAACe,MAAX,CAAkBnD,KAAxC,CAZzB;AAaPkC,UAAAA,UAAU,EAAE;AACXZ,YAAAA,MAAM,EAAEc,UAAU,CAACd;AADR;AAbL,SAAD,CAAP;AAiBA;AACD,KA3BD,CA4BA,OAAMmK,GAAN,EAAW;AACVL,MAAAA,MAAM,CAACK,GAAD,CAAN;AACA;AACD,GAjCK,CAAP;AAmCA;AAED;;;;;;;IAKMC,S;;;;;;;;;;AACL;;;;;;;;;;;;;;;;;;0BAkBMf,I,EAAMzL,O,EAAS;AACpBA,MAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AAEA,aAAO+L,cAAc,CAACN,IAAD,EAAOzL,OAAP,CAAd,CAA8ByM,IAA9B,CACN,UAACvJ,UAAD;AAAA,eAAgB,IAAI1F,MAAJ,CAAW0F,UAAX,CAAhB;AAAA,OADM,CAAP;AAGA;AAED;;;;;;;;;;;;;;;;;;;;;;6BAmBS2I,M,EAAQ7L,O,EAAS;AACzB6L,MAAAA,MAAM,GAAGA,MAAM,CAACa,MAAP,EAAT;AAEA,UAAMzL,aAAa,GAAG5D,IAAI,CAACwO,MAAM,CAACxH,KAAP,CAAaM,MAAd,CAAJ,GAA4BtH,IAAI,CAACwO,MAAM,CAACxH,KAAP,CAAaO,IAAd,CAAtD;AACA,UAAM1D,UAAU,GAAGzC,WAAW,CAACC,MAA/B;AACA,UAAIyC,aAAa,GAAGvC,cAAc,CAACC,QAAnC;AAEAmB,MAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AAEA,UAAMgB,MAAM,GAAG6K,MAAM,CAAC1I,IAAP,CAAYxD,MAA3B;AACA,UAAMmB,KAAK,GAAG+K,MAAM,CAAC1I,IAAP,CAAY,CAAZ,EAAexD,MAA7B;AAEA,UAAMmG,KAAK,GAAG+F,MAAM,CAACM,IAAP,CAAYC,KAAZ,IAAqB,EAAnC;;AAEA,UAAIhC,WAAW,GAAGlF,eAAe,CAAC2G,MAAM,CAAC1I,IAAR,CAAjC;;AACA,UAAIwJ,sBAAJ;;AAEA,UAAI3M,OAAO,CAAC4M,SAAZ,EAAuB;AACtB,YACC,CAAC5M,OAAO,CAACoB,WAAT,IACAyE,MAAM,CAAC7F,OAAO,CAACoB,WAAT,CAAN,GAA8B/B,iBAD9B,IAEAwG,MAAM,CAAC7F,OAAO,CAACoB,WAAT,CAAN,GAA8B9B,iBAH/B,EAIE;AACD,gBAAM,IAAI+B,KAAJ,mFAAqFrB,OAAO,CAACoB,WAA7F,EAAN;AACA;;AAEDuL,QAAAA,sBAAsB,GAAGvC,WAAzB;AACAA,QAAAA,WAAW,GAAGtB,iBAAiB,CAACsB,WAAD,EAAcpK,OAAO,CAACoB,WAAtB,CAA/B;AAEAD,QAAAA,aAAa,GAAGvC,cAAc,CAACE,MAA/B;AACA;;AAED,UAAM+N,oBAAoB,GAAG7P,OAAO,CAACoN,WAAD,CAApC;AACA,UAAM0C,+BAA+B,GAAG9P,OAAO,CAAC2P,sBAAsB,IAAIvC,WAA3B,CAA/C;AAEA,UAAMkC,YAAY,GAAGT,MAAM,CAACS,YAAP,CAAoB9P,GAApB,CACpB,UAACuI,GAAD;AAAA,eAASA,GAAG,CAACvI,GAAJ,CACR,UAACkH,QAAD,EAAc;AACb,cAAIA,QAAQ,KAAK,IAAjB,EAAuB;AACtB,mBAAOjG,gBAAP;AACA;;AAED,cAAIiG,QAAQ,KAAK,EAAjB,EAAqB;AACpB,mBAAO,GAAP;AACA;;AAED,iBAAOA,QAAP;AACA,SAXO,CAAT;AAAA,OADoB,CAArB;AAgBA,UAAMqH,iBAAiB,GAAG/N,OAAO,CAACsP,YAAD,CAAjC;AAEA,UAAM7H,QAAQ,GAAGrH,OAAO,CAACJ,OAAO,CAAC6O,MAAM,CAAC1I,IAAR,CAAP,CAAqB3G,GAArB,CAAyB,UAAC4G,IAAD;AAAA,eAAUA,IAAI,CAAC6B,UAAf;AAAA,OAAzB,CAAD,CAAP,CAA6DlI,MAA7D,CAChB,UAACgQ,UAAD,EAAa9H,UAAb,EAA4B;AAC3B,YAAI4G,MAAM,CAACxH,KAAP,CAAaM,MAAb,CAAoBM,UAApB,YAAJ,EAAmD;AAClD8H,UAAAA,UAAU,CAACzI,IAAX,CAAgBuH,MAAM,CAACxH,KAAP,CAAaM,MAAb,CAAoBM,UAApB,CAAhB;AACA;;AAED,YAAI4G,MAAM,CAACxH,KAAP,CAAaO,IAAb,CAAkBK,UAAlB,YAAJ,EAAiD;AAChD8H,UAAAA,UAAU,CAACzI,IAAX,CAAgBuH,MAAM,CAACxH,KAAP,CAAaO,IAAb,CAAkBK,UAAlB,CAAhB;AACA;;AAED,eAAO8H,UAAP;AACA,OAXe,EAYhB,EAZgB,CAAjB;AAeA,UAAM7J,UAAU,GAAG;AAClBe,QAAAA,MAAM,EAAE;AACPnD,UAAAA,KAAK,EAALA,KADO;AAEPE,UAAAA,MAAM,EAANA,MAFO;AAGPC,UAAAA,aAAa,EAAbA,aAHO;AAIPC,UAAAA,UAAU,EAAVA,UAJO;AAKPC,UAAAA,aAAa,EAAbA,aALO;AAMPV,UAAAA,OAAO,EAAE/D,GAAG,CAACmP,MAAM,CAACM,IAAR,EAAc,qBAAd,CAAH,IAA2C;AAN7C,SADU;AASlB/F,QAAAA,MAAM,EAAEjB,gBAAgB,CAAC0H,oBAAD,CATN;AAUlBrD,QAAAA,iBAAiB,EAAErE,gBAAgB,CAAC2H,+BAAD,CAVjB;AAWlBpJ,QAAAA,QAAQ,EAAEyB,gBAAgB,CAACmH,YAAD,CAXR;AAYlB/G,QAAAA,KAAK,EAAEsG,MAAM,CAACM,IAAP,CAAY5G,KAZD;AAalBE,QAAAA,MAAM,EAAEoG,MAAM,CAACM,IAAP,CAAY1G,MAbF;AAclBC,QAAAA,SAAS,EAAEmG,MAAM,CAACM,IAAP,CAAYzG,SAdL;AAelBjB,QAAAA,QAAQ,EAARA,QAfkB;AAgBlBqB,QAAAA,KAAK,EAALA;AAhBkB,OAAnB;;AAmBA,UAAMkH,YAAY,GAAG7D,YAAY,CAACjG,UAAD,EAAalD,OAAb,CAAjC;;AAEA,UAAMiN,kBAAkB,GAAG3P,KAAK,CAACkI,MAAN,CAC1BL,gBAAgB,CAACiF,WAAD,CADU,EAE1B7M,SAAS,CAACsE,QAFgB,CAA3B;AAKA,UAAMqL,wBAAwB,GAAG5P,KAAK,CAACkI,MAAN,CAChCuF,iBAAiB,CAACvO,GAAlB,CACC,UAACkH,QAAD;AAAA,eAAcA,QAAQ,CAAC,CAAD,CAAtB;AAAA,OADD,EAEE0B,IAFF,CAEO,EAFP,CADgC,EAIhC7H,SAAS,CAACsE,QAJsB,CAAjC;AAOA,UAAMsL,iBAAiB,GAAG7P,KAAK,CAACkI,MAAN,WAAgBqG,MAAM,CAACM,IAAP,CAAY5G,KAAZ,IAAqB,EAArC,SAA6ChI,SAAS,CAACsE,QAAvD,CAA1B;AACA,UAAMuL,kBAAkB,GAAG9P,KAAK,CAACkI,MAAN,WAAgBqG,MAAM,CAACM,IAAP,CAAY1G,MAAZ,IAAsB,EAAtC,SAA8ClI,SAAS,CAACsE,QAAxD,CAA3B;AACA,UAAMwL,qBAAqB,GAAG/P,KAAK,CAACkI,MAAN,WAAgBqG,MAAM,CAACM,IAAP,CAAYzG,SAAZ,IAAyB,EAAzC,SAAiDnI,SAAS,CAACsE,QAA3D,CAA9B;AAEA,UAAMyL,iBAAiB,GAAGhQ,KAAK,CAACkI,MAAN,WAAgBf,QAAQ,CAACW,IAAT,CAAc,IAAd,CAAhB,SAAyC7H,SAAS,CAACsE,QAAnD,CAA1B;AAEA,UAAM0L,iBAAiB,GAAGjQ,KAAK,CAACkI,MAAN,WAAgBM,KAAhB,SAA2BvI,SAAS,CAACsE,QAArC,CAA1B;AAEA,UAAMwJ,OAAO,GAAG,CACf2B,YADe,EAEfC,kBAFe,EAGfC,wBAHe,EAIfC,iBAJe,EAKfC,kBALe,EAMfC,qBANe,EAOfC,iBAPe,EAQfC,iBARe,CAAhB;AAWA,UAAIjC,iBAAiB,GAAG0B,YAAY,CAACrN,MAAb,GAAsBsN,kBAAkB,CAACtN,MAAzC,GACvBuN,wBAAwB,CAACvN,MADF,GACWwN,iBAAiB,CAACxN,MAD7B,GAEvByN,kBAAkB,CAACzN,MAFI,GAEK0N,qBAAqB,CAAC1N,MAF3B,GAGvB2N,iBAAiB,CAAC3N,MAHK,GAGI4N,iBAAiB,CAAC5N,MAH9C;;AAKA,UACCmN,+BAA+B,CAACU,IAAhC,CAAqC,UAAC9J,QAAD;AAAA,eAAcA,QAAQ,CAAC/D,MAAT,GAAkB,CAAhC;AAAA,OAArC,CADD,EAEE;AACD,YAAM8N,WAAW,GAAGvC,WAAW,CAC9B4B,+BAD8B,EAE9B/B,iBAF8B,EAG9Bc,MAAM,CAAC7I,UAAP,IAAqB,EAHS,CAA/B;;AAMAqI,QAAAA,OAAO,CAAC/G,IAAR,CAAamJ,WAAb;AAEAnC,QAAAA,iBAAiB,IAAImC,WAAW,CAAC9N,MAAjC;AACA;;AAED,aAAOqG,MAAM,CAAC6D,MAAP,CAAcwB,OAAd,EAAuBC,iBAAvB,CAAP;AACA;;;;;;AAGFoC,OAAO,GAAGC,MAAM,CAACD,OAAP,GAAiBlB,SAA3B","sourcesContent":["/**\n * PUZ file parser.\n *\n * @module xpuz/parsers/puz\n * @see {@link module:xpuz/puzzle|Puzzle}\n */\n\nconst map             = require(\"lodash/map\");\nconst get             = require(\"lodash/get\");\nconst range           = require(\"lodash/range\");\nconst reverse         = require(\"lodash/reverse\");\nconst zip             = require(\"lodash/zip\");\nconst each            = require(\"lodash/each\");\nconst reduce          = require(\"lodash/reduce\");\nconst flatten         = require(\"lodash/flatten\");\nconst padStart        = require(\"lodash/padStart\");\nconst chunk           = require(\"lodash/chunk\");\nconst findKey         = require(\"lodash/findKey\");\nconst compact         = require(\"lodash/compact\");\nconst size            = require(\"lodash/size\");\nconst iconv           = require(\"iconv-lite\");\nconst PUZReader       = require(\"./puz/puz-reader\");\nconst Puzzle          = require(\"../puzzle\");\n\n\nconst BLOCK_CELL_VALUE = \".\";\n\nconst BLOCK_CELL_VALUE_REGEX = /\\./g;\n\nconst EXTENSION_HEADER_LENGTH = 8;\n\nconst HEADER_CHECKSUM_BYTE_LENGTH = 8;\n\nconst MAGIC_CHECKSUM_BYTE_LENGTH = 8;\n\nconst UNKNOWN1_BYTE_LENGTH = 2;\n\nconst UNKNOWN2_BYTE_LENGTH = 12;\n\nconst CHECKSUM_BUFFER_LENGTH = 2;\n\nconst NUMBER_OF_CLUES_BUFFER_LENGTH = 2;\n\nconst PUZZLE_TYPE_BUFFER_LENGTH = 2;\n\nconst SOLUTION_STATE_BUFFER_LENGTH = 2;\n\nconst HEADER_BUFFER_LENGTH = 52;\n\nconst EXTENSION_LENGTH_BUFFER_LENGTH = 2;\n\nconst EXTENSION_NAME_LENGTH = 4;\n\nconst PUZZLE_KEY_LENGTH = 4;\n\nconst RTBL_KEY_PADDING_WIDTH = 2;\n\nconst PUZZLE_TYPE = {\n\tNormal: 0x0001,\n\tDiagramless: 0x0401\n};\n\nconst SOLUTION_STATE = {\n\t// solution is available in plaintext\n\tUnlocked: 0x0000,\n\t// solution is locked (scrambled) with a key\n\tLocked: 0x0004\n};\n\nconst CELL_STATES = {\n\tPreviouslyIncorrect: 0x10,\n\tCurrentlyIncorrect: 0x20,\n\tAnswerGiven: 0x40,\n\tCircled: 0x80\n};\n\nconst ATOZ = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n\nconst MINIMUM_KEY_VALUE = 1000;\n\nconst MAXIMUM_KEY_VALUE = 9999;\n\nfunction _doChecksum(buffer, cksum) {\n\tfor (let i = 0; i < buffer.length; i++) {\n\t\t// right-shift one with wrap-around\n\t\tconst lowbit = cksum & 0x0001;\n\n\t\tcksum = cksum >> 1;\n\n\t\tif (lowbit) {\n\t\t\t// eslint-disable-next-line no-magic-numbers\n\t\t\tcksum = cksum | 0x8000;\n\t\t}\n\n\t\t// then add in the data and clear any carried bit past 16\n\t\t// eslint-disable-next-line no-magic-numbers\n\t\tcksum = (cksum + buffer.readUInt8(i)) & 0xFFFF;\n\t}\n\n\treturn cksum;\n}\n\nfunction _readHeader(reader, options) {\n\tconst data = {};\n\n\tdata.globalChecksum = reader._readUInt16();\n\n\treader._seek(\"ACROSS&DOWN\\0\".length, { current: true });\n\n\tdata.headerChecksum = reader._readUInt16();\n\n\tdata.magicChecksum = reader._readValues(MAGIC_CHECKSUM_BYTE_LENGTH);\n\n\tdata.version = reader._readString();\n\n\tdata.unknown1 = reader._readValues(UNKNOWN1_BYTE_LENGTH);\n\n\tdata.scrambledChecksum = reader._readUInt16();\n\n\tdata.unknown2 = reader._readValues(UNKNOWN2_BYTE_LENGTH);\n\n\tdata.width = reader._readUInt8();\n\n\tdata.height = reader._readUInt8();\n\n\tdata.numberOfClues = reader._readUInt16();\n\n\tdata.puzzleType = reader._readUInt16();\n\n\tdata.solutionState = reader._readUInt16();\n\n\tif (data.solutionState === SOLUTION_STATE.Locked && !options.solutionKey) {\n\t\tthrow new Error(\"Puzzle solution is locked and no solutionKey option was provided\");\n\t}\n\n\treturn data;\n}\n\nfunction _processExtension(extension) {\n\tif (extension.name === \"GRBS\") {\n\t\textension.board = map(\n\t\t\textension.data,\n\t\t\t(b) => {\n\t\t\t\tif (b === 0) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\treturn b - 1;\n\t\t\t}\n\t\t);\n\t}\n\n\tif (extension.name === \"RTBL\") {\n\t\textension.rebus_solutions = reduce(\n\t\t\ticonv.decode(extension.data, PUZReader.ENCODING).split(\";\"),\n\t\t\t(solutions, solutionPair) => {\n\t\t\t\tconst pair = solutionPair.split(\":\");\n\n\t\t\t\tpair[0] = parseInt(pair[0], 10);\n\n\t\t\t\tsolutions[pair[0]] = pair[1];\n\n\t\t\t\treturn solutions;\n\t\t\t},\n\t\t\t{}\n\t\t);\n\t}\n\n\tif (extension.name === \"LTIM\") {\n\t\tconst timings = iconv.decode(extension.data, PUZReader.ENCODING).split(\",\");\n\n\t\textension.timing = {\n\t\t\telapsed: parseInt(timings[0], 10),\n\t\t\trunning: timings[1] === \"0\"\n\t\t};\n\t}\n\n\tif (extension.name === \"GEXT\") {\n\t\textension.cell_states = map(\n\t\t\textension.data,\n\t\t\t(b) => {\n\t\t\t\treturn {\n\t\t\t\t\tPreviouslyIncorrect: !!(b & CELL_STATES.PreviouslyIncorrect),\n\t\t\t\t\tCurrentlyIncorrect: !!(b & CELL_STATES.CurrentlyIncorrect),\n\t\t\t\t\tAnswerGiven: !!(b & CELL_STATES.AnswerGiven),\n\t\t\t\t\tCircled: !!(b & CELL_STATES.Circled)\n\t\t\t\t};\n\t\t\t}\n\t\t);\n\t}\n\n\tif (extension.name === \"RUSR\") {\n\t\textension.user_rebus_entries = map(\n\t\t\ticonv.decode(extension.data, PUZReader.ENCODING).split(\"\\0\"),\n\t\t\t(entry) => entry === \"\" ? null : entry\n\t\t);\n\t}\n\n\treturn extension;\n}\n\nfunction _readExtension(reader) {\n\tconst extension = {};\n\n\textension.name = reader._readString(EXTENSION_NAME_LENGTH);\n\n\tconst length = reader._readUInt16();\n\n\textension.checksum = reader._readUInt16();\n\n\t// Include null byte at end\n\textension.data = reader._readValues(length + 1);\n\t// Remove null byte at the end\n\textension.data = extension.data.slice(0, -1);\n\n\treturn _processExtension(extension);\n}\n\nfunction _parseEnd(reader, data) {\n\tconst remainingLength = reader.size() - reader.tell();\n\n\tif (remainingLength >= EXTENSION_HEADER_LENGTH) {\n\t\tconst extension = _readExtension(reader);\n\n\t\tdata.extensions = data.extensions || {};\n\t\tdata.extensions[extension.name] = extension;\n\n\t\tdelete extension.name;\n\n\t\t_parseEnd(reader, data);\n\t}\n}\n\nfunction _parseExtensions(reader, puzzleData) {\n\tconst data = {};\n\n\t_parseEnd(reader, data);\n\n\tif (get(data, \"extensions.GRBS\")) {\n\t\teach(\n\t\t\tflatten(puzzleData.grid),\n\t\t\t(cell, index) => {\n\t\t\t\tconst c = cell;\n\n\t\t\t\tif (data.extensions.GRBS.board[index] === null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst rebusSolution = data.extensions.RTBL.rebus_solutions[\n\t\t\t\t\tdata.extensions.GRBS.board[index]\n\t\t\t\t];\n\n\t\t\t\tc.solution = rebusSolution;\n\t\t\t}\n\t\t);\n\t}\n\n\tif (get(data, \"extensions.RUSR\")) {\n\t\tdata.extensions.RUSR.user_rebus_entries.forEach(\n\t\t\t(rusr, index) => {\n\t\t\t\tif (rusr !== null) {\n\t\t\t\t\tconst y = Math.floor(index / puzzleData.header.width);\n\t\t\t\t\tconst x = index % puzzleData.header.width;\n\n\t\t\t\t\tpuzzleData.solution[y][x] = rusr;\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\tpuzzleData._extensions = data.extensions;\n\n\tpuzzleData.timing = get(data, \"extensions.LTIM.timing\");\n}\n\nfunction _readClues(reader, numberOfClues) {\n\tconst clues = [];\n\n\tfor (let i = 0; i < numberOfClues; i++) {\n\t\tclues.push(reader._readString());\n\t}\n\n\treturn clues;\n}\n\nfunction _generateGridAndClues(answers, clueList) {\n\tfunction _isBlockCell(x, y) {\n\t\treturn answers[y][x] === BLOCK_CELL_VALUE;\n\t}\n\n\tconst clues = {\n\t\tacross: {},\n\t\tdown: {}\n\t};\n\n\tconst grid = [];\n\n\tconst width = answers[0].length, height = answers.length;\n\n\tlet clueCount = 0;\n\n\tlet clueListIndex = 0;\n\n\tfor (let y = 0; y < height; y++) {\n\t\tconst row = [];\n\n\t\tfor (let x = 0; x < width; x++) {\n\t\t\tconst cell = {};\n\n\t\t\tif (_isBlockCell(x, y)) {\n\t\t\t\tcell.isBlockCell = true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcell.solution = answers[y][x];\n\n\t\t\t\tlet down = false, across = false;\n\n\t\t\t\tif (\n\t\t\t\t\t(\n\t\t\t\t\t\tx === 0 ||\n\t\t\t\t\t\t_isBlockCell(x - 1, y)\n\t\t\t\t\t) && (\n\t\t\t\t\t\tx + 1 < width &&\n\t\t\t\t\t\t!_isBlockCell(x + 1, y)\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tacross = true;\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(\n\t\t\t\t\t\ty === 0 ||\n\t\t\t\t\t\t_isBlockCell(x, y - 1)\n\t\t\t\t\t) && (\n\t\t\t\t\t\ty + 1 < height &&\n\t\t\t\t\t\t!_isBlockCell(x, y + 1)\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tdown = true;\n\t\t\t\t}\n\n\t\t\t\tif (across || down) {\n\t\t\t\t\tcell.clueNumber = ++clueCount;\n\t\t\t\t}\n\n\t\t\t\tif (across) {\n\t\t\t\t\tclues.across[clueCount] = clueList[clueListIndex++];\n\t\t\t\t}\n\n\t\t\t\tif (down) {\n\t\t\t\t\tclues.down[clueCount] = clueList[clueListIndex++];\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\n\t\t\trow.push(cell);\n\t\t}\n\n\t\tgrid.push(row);\n\t}\n\n\treturn {\n\t\tgrid,\n\t\tclues,\n\t};\n}\n\nfunction _pluckSolutions(grid) {\n\treturn grid.map(\n\t\t(row) => row.map(\n\t\t\t(cell) => {\n\t\t\t\tif (cell.isBlockCell) {\n\t\t\t\t\treturn BLOCK_CELL_VALUE;\n\t\t\t\t}\n\n\t\t\t\tif (cell.solution === null) {\n\t\t\t\t\treturn \" \";\n\t\t\t\t}\n\n\t\t\t\treturn cell.solution;\n\t\t\t}\n\t\t)\n\t);\n}\n\nfunction _flattenSolution(solution) {\n\treturn flatten(solution).map(\n\t\t(entry) => {\n\t\t\tif (entry === null) {\n\t\t\t\treturn BLOCK_CELL_VALUE;\n\t\t\t}\n\n\t\t\tif (entry === \"\") {\n\t\t\t\treturn \"-\";\n\t\t\t}\n\n\t\t\treturn entry[0];\n\t\t}\n\t).join(\"\");\n}\n\nfunction _unflattenSolution(solution, width) {\n\treturn chunk(\n\t\tsolution.split(\"\"),\n\t\twidth\n\t).map(\n\t\t(row) => row.map(\n\t\t\t(cell) => cell === \"-\" ? \"\" : cell\n\t\t)\n\t);\n}\n\nfunction _textChecksum(puzzleData, checksum) {\n\tif (puzzleData.title) {\n\t\tchecksum = _doChecksum(iconv.encode(puzzleData.title + \"\\0\", PUZReader.ENCODING), checksum);\n\t}\n\n\tif (puzzleData.author) {\n\t\tchecksum = _doChecksum(iconv.encode(puzzleData.author + \"\\0\", PUZReader.ENCODING), checksum);\n\t}\n\n\n\tif (puzzleData.copyright) {\n\t\tchecksum = _doChecksum(iconv.encode(puzzleData.copyright + \"\\0\", PUZReader.ENCODING), checksum);\n\t}\n\n\tpuzzleData.clueList.forEach(\n\t\t(clue) => {\n\t\t\tif (clue) {\n\t\t\t\tchecksum = _doChecksum(iconv.encode(clue, PUZReader.ENCODING), checksum);\n\t\t\t}\n\t\t}\n\t);\n\n\tconst versionParts = puzzleData.header.version.split(\".\").map(Number);\n\t// Notes only became part of the checksum starting in version 1.3\n\t// (see https://github.com/alexdej/puzpy/blob/6109ad5a54359262010d01f2e0175d928bd70962/puz.py#L360)\n\tif (versionParts[0] >= 1 && versionParts[1] >= 3) { // eslint-disable-line no-magic-numbers\n\t\tif (puzzleData.notes) {\n\t\t\tchecksum = _doChecksum(iconv.encode(puzzleData.notes + \"\\0\", PUZReader.ENCODING), checksum);\n\t\t}\n\t}\n\n\treturn checksum;\n}\n\nfunction _headerChecksum(puzzleData, checksum) {\n\tif(checksum === undefined) {\n\t\tchecksum = 0;\n\t}\n\n\tconst buffer = new Buffer(HEADER_CHECKSUM_BYTE_LENGTH);\n\n\tbuffer.writeUInt8(puzzleData.header.width, 0);\n\tbuffer.writeUInt8(puzzleData.header.height, 1);\n\t// These \"magic numbers\" are the successive byte offsets to write at\n\t/* eslint-disable no-magic-numbers */\n\tbuffer.writeUInt16LE(puzzleData.header.numberOfClues, 2);\n\tbuffer.writeUInt16LE(puzzleData.header.puzzleType, 4);\n\tbuffer.writeUInt16LE(puzzleData.header.solutionState, 6);\n\t/* eslint-enable no-magic-numbers */\n\n\treturn _doChecksum(buffer, checksum);\n}\n\nfunction _globalChecksum(puzzleData, headerChecksum) {\n\tlet checksum = headerChecksum === undefined ? _headerChecksum(puzzleData) : headerChecksum;\n\n\tlet buffer = iconv.encode(puzzleData.answer, PUZReader.ENCODING);\n\n\tchecksum = _doChecksum(buffer, checksum);\n\n\tbuffer = iconv.encode(puzzleData.solution, PUZReader.ENCODING);\n\n\tchecksum = _doChecksum(buffer, checksum);\n\n\tchecksum = _textChecksum(puzzleData, checksum);\n\n\treturn checksum;\n}\n\nfunction _magicChecksum(puzzleData) {\n\tconst headerChecksum = _headerChecksum(puzzleData);\n\tconst answerChecksum = _doChecksum(iconv.encode(puzzleData.answer, PUZReader.ENCODING));\n\tconst solutionChecksum = _doChecksum(iconv.encode(puzzleData.solution, PUZReader.ENCODING));\n\tconst textChecksum = _textChecksum(puzzleData);\n\n\tconst MAGIC_CHECKSUM_STRING = \"ICHEATED\";\n\n\tconst magicChecksum = new Buffer([\n\t\t/* eslint-disable no-magic-numbers */\n\t\tMAGIC_CHECKSUM_STRING.charCodeAt(0) ^ (headerChecksum & 0xFF),\n\t\tMAGIC_CHECKSUM_STRING.charCodeAt(1) ^ (answerChecksum & 0xFF),\n\t\tMAGIC_CHECKSUM_STRING.charCodeAt(2) ^ (solutionChecksum & 0xFF),\n\t\tMAGIC_CHECKSUM_STRING.charCodeAt(3) ^ (textChecksum & 0xFF),\n\t\tMAGIC_CHECKSUM_STRING.charCodeAt(4) ^ ((headerChecksum & 0xFF00) >> 8),\n\t\tMAGIC_CHECKSUM_STRING.charCodeAt(5) ^ ((answerChecksum & 0xFF00) >> 8),\n\t\tMAGIC_CHECKSUM_STRING.charCodeAt(6) ^ ((solutionChecksum & 0xFF00) >> 8),\n\t\tMAGIC_CHECKSUM_STRING.charCodeAt(7) ^ ((textChecksum & 0xFF00) >> 8)\n\t\t/* eslint-enable no-magic-numbers */\n\t]);\n\n\n\treturn magicChecksum;\n}\n\nfunction _transposeGrid(gridString, width, height) {\n\tconst data = gridString.match(new RegExp(\".{1,\" + width + \"}\", \"g\"));\n\n\treturn range(width).map(\n\t\t(c) => range(height).map(\n\t\t\t(r) => data[r][c]\n\t\t).join(\"\")\n\t).join(\"\");\n}\n\nfunction _restoreSolution(s, t) {\n\t/*\n\ts is the source string, it can contain '.'\n\tt is the target, it's smaller than s by the number of '.'s in s\n\n\tEach char in s is replaced by the corresponding\n\tchar in t, jumping over '.'s in s.\n\n\t>>> restore('ABC.DEF', 'XYZABC')\n\t'XYZ.ABC'\n\t*/\n    \n\tt = t.split(\"\");\n\n\treturn s.split(\"\").reduce(\n\t\t(arr, c) => {\n\t\t\tif (c === BLOCK_CELL_VALUE) {\n\t\t\t\tarr.push(c);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tarr.push(t.shift());\n\t\t\t}\n\n\t\t\treturn arr;\n\t\t},\n\t\t[]\n\t).join(\"\");\n}\n\nfunction _shift(str, key) {\n\treturn str.split(\"\").map(\n\t\t(c, index) => {\n\t\t\tlet letterIndex = (ATOZ.indexOf(c) + Number(key[index % key.length])) % ATOZ.length;\n\n\t\t\tif (letterIndex < 0) {\n\t\t\t\tletterIndex = ATOZ.length + letterIndex;\n\t\t\t}\n\n\t\t\treturn ATOZ[letterIndex];\n\t\t}\n\t).join(\"\");\n}\n\nfunction _unshift(str, key) {\n\treturn _shift(\n\t\tstr,\n\t\tmap(key, (k) => -k)\n\t);\n}\n\nfunction _everyOther(str) {\n\treturn str.split(\"\").reduce(\n\t\t(arr, c, i) => {\n\t\t\t// eslint-disable-next-line no-magic-numbers\n\t\t\tif (i % 2 === 0) {\n\t\t\t\tarr.push(c);\n\t\t\t}\n\n\t\t\treturn arr;\n\t\t},\n\t\t[]\n\t).join(\"\");\n}\n\nfunction _unshuffle(str) {\n\treturn _everyOther(str.substring(1)) + _everyOther(str);\n}\n\nfunction _unscrambleString(str, key) {\n\tconst len = str.length;\n\n\treverse(padStart(key, PUZZLE_KEY_LENGTH, \"0\").split(\"\")).forEach(\n\t\t(k) => {\n\t\t\tstr = _unshuffle(str);\n\t\t\tstr = str.substring(len - k) + str.substring(0, len - k);\n\t\t\tstr = _unshift(str, key);\n\t\t}\n\t);\n\n\treturn str;\n}\n\n\nfunction _shuffle(str) {\n\t// eslint-disable-next-line no-magic-numbers\n\tconst mid = Math.floor(str.length / 2);\n\n\treturn zip(\n\t\tstr.substring(mid).split(\"\"),\n\t\tstr.substring(0, mid).split(\"\")\n\t).reduce(\n\t\t(arr, chars) => {\n\t\t\tif (chars[0] === undefined || chars[1] === undefined) {\n\t\t\t\treturn arr;\n\t\t\t}\n\n\t\t\tarr.push(chars[0] + chars[1]);\n\n\t\t\treturn arr;\n\t\t},\n\t\t[]\n\t// eslint-disable-next-line no-magic-numbers\n\t).join(\"\") + (str.length % 2 ? str[str.length - 1] : \"\");\n}\n\nfunction _scrambleString(str, key) {\n\t/*\n\tstr is the puzzle's solution in column-major order, omitting black squares:\n\ti.e. if the puzzle is:\n\t\tC A T\n\t\t# # A\n\t\t# # R\n\tsolution is CATAR\n\n\n\tKey is a 4-digit number in the range 1000 <= key <= 9999\n\n    */\n\n\teach(\n\t\tpadStart(key, PUZZLE_KEY_LENGTH, \"0\"),\n\t\t(k) => {\n\t\t\tstr = _shift(str, key);\n\t\t\tstr = str.substring(k) + str.substring(0, k);\n\t\t\tstr = _shuffle(str);\n\t\t}\n\t);\n\n\treturn str;\n}\n\nfunction _scrambledChecksum(answer, width, height) {\n\tconst transposed = _transposeGrid(\n\t\t_flattenSolution(answer),\n\t\twidth,\n\t\theight\n\t).replace(BLOCK_CELL_VALUE_REGEX, \"\");\n\n\treturn _doChecksum(iconv.encode(transposed, PUZReader.ENCODING));\n}\n\nfunction _validateChecksums(puzzleData) {\n\tconst headerChecksum = _headerChecksum(puzzleData);\n\n\tconst globalChecksum = _globalChecksum(puzzleData, headerChecksum);\n\n\tconst magicChecksum = _magicChecksum(puzzleData);\n\n\tconst checksums = {\n\t\theader: headerChecksum,\n\t\tglobal: globalChecksum,\n\t\tmagic: magicChecksum\n\t};\n\n\tconst errors = [];\n\n\tif (checksums.header !== puzzleData.header.headerChecksum) {\n\t\terrors.push(\"header checksums do not match\");\n\t}\n\n\tif (checksums.global !== puzzleData.header.globalChecksum) {\n\t\terrors.push(\"global checksums do not match\");\n\t}\n\n\tif (!checksums.magic.equals(puzzleData.header.magicChecksum)) {\n\t\terrors.push(\"magic checksums do not match\");\n\t}\n\n\teach(\n\t\tpuzzleData._extensions,\n\t\t(extension, name) => {\n\t\t\tif (extension.checksum !== _doChecksum(extension.data)) {\n\t\t\t\terrors.push(`checksum for extension ${name} does not match`);\n\t\t\t}\n\t\t}\n\t);\n\n\treturn errors;\n}\n\nfunction _scrambleSolution(solutionGrid, key) {\n\tconst height = solutionGrid.length;\n\tconst width = solutionGrid[0].length;\n\n\tlet solutionString = flatten(\n\t\t_flattenSolution(solutionGrid)\n\t).join(\"\");\n\n\tconst transposed = _transposeGrid(solutionString, width, height);\n\n\tconst data = _restoreSolution(\n\t\ttransposed,\n\t\t_scrambleString(transposed.replace(BLOCK_CELL_VALUE_REGEX, \"\"), key)\n\t);\n\n\tsolutionString = _transposeGrid(data, height, width);\n\n\treturn chunk(solutionString.split(\"\"), width);\n}\n\nfunction _unscrambleSolution(puzzleData, key) {\n\tconst transposed = _transposeGrid(\n\t\tpuzzleData.answer,\n\t\tpuzzleData.header.width,\n\t\tpuzzleData.header.height\n\t);\n\n\tconst data = _restoreSolution(\n\t\ttransposed,\n\t\t_unscrambleString(\n\t\t\ttransposed.replace(BLOCK_CELL_VALUE_REGEX, \"\"),\n\t\t\tkey\n\t\t)\n\t);\n\n\tconst result = _transposeGrid(\n\t\tdata,\n\t\tpuzzleData.header.height,\n\t\tpuzzleData.header.width\n\t);\n\n\tif (result === puzzleData.answer) {\n\t\tthrow new Error(\"Unscrambled solution is the same as the scrambled solution; incorrect key?\");\n\t}\n\n\treturn result;\n}\n\nfunction _writeHeader(puzzleData, options) {\n\tconst globalChecksumBuffer = new Buffer(CHECKSUM_BUFFER_LENGTH);\n\n\tglobalChecksumBuffer.writeUInt16LE(_globalChecksum(puzzleData));\n\n\tconst headerChecksumBuffer = new Buffer(CHECKSUM_BUFFER_LENGTH);\n\n\theaderChecksumBuffer.writeUInt16LE(_headerChecksum(puzzleData));\n\n\tconst magicChecksumBuffer = _magicChecksum(puzzleData);\n\n\tconst scrambledChecksumBuffer = new Buffer(CHECKSUM_BUFFER_LENGTH);\n\n\tif (get(options, \"scrambled\")) {\n\t\tscrambledChecksumBuffer.writeUInt16LE(\n\t\t\t_scrambledChecksum(\n\t\t\t\tpuzzleData.unscrambledAnswer,\n\t\t\t\tpuzzleData.header.width,\n\t\t\t\tpuzzleData.header.height\n\t\t\t)\n\t\t);\n\t}\n\telse {\n\t\tscrambledChecksumBuffer.fill(0x0);\n\t}\n\n\tconst numberOfCluesBuffer = new Buffer(NUMBER_OF_CLUES_BUFFER_LENGTH);\n\n\tnumberOfCluesBuffer.writeUInt16LE(puzzleData.header.numberOfClues);\n\n\tconst puzzleTypeBuffer = new Buffer(PUZZLE_TYPE_BUFFER_LENGTH);\n\n\tpuzzleTypeBuffer.writeUInt16LE(puzzleData.header.puzzleType);\n\n\tconst solutionStateBuffer = new Buffer(SOLUTION_STATE_BUFFER_LENGTH);\n\n\tsolutionStateBuffer.writeUInt16LE(puzzleData.header.solutionState);\n\n\treturn Buffer.concat(\n\t\t[\n\t\t\tglobalChecksumBuffer,\n\t\t\ticonv.encode(\"ACROSS&DOWN\\0\", PUZReader.ENCODING),\n\t\t\theaderChecksumBuffer,\n\t\t\tmagicChecksumBuffer,\n\t\t\ticonv.encode(get(options, \"version\", puzzleData.header.version) + \"\\0\", PUZReader.ENCODING),\n\t\t\t// unknown block 1\n\t\t\tnew Buffer([0x0, 0x0]),\n\t\t\tscrambledChecksumBuffer,\n\t\t\t// unknown block 2\n\t\t\tnew Buffer(UNKNOWN2_BYTE_LENGTH).fill(0x0),\n\t\t\tnew Buffer([puzzleData.header.width]),\n\t\t\tnew Buffer([puzzleData.header.height]),\n\t\t\tnumberOfCluesBuffer,\n\t\t\tpuzzleTypeBuffer,\n\t\t\tsolutionStateBuffer\n\t\t],\n\t\tHEADER_BUFFER_LENGTH\n\t);\n}\n\nfunction _writeExtension(extensionBuffer, extensionName) {\n\tconst lengthBuffer = new Buffer(EXTENSION_LENGTH_BUFFER_LENGTH);\n\tlengthBuffer.writeUInt16LE(extensionBuffer.length);\n\n\tconst checksumBuffer = new Buffer(CHECKSUM_BUFFER_LENGTH);\n\tchecksumBuffer.writeUInt16LE(_doChecksum(extensionBuffer));\n\n\treturn Buffer.concat(\n\t\t[\n\t\t\ticonv.encode(extensionName, PUZReader.ENCODING),\n\t\t\tlengthBuffer,\n\t\t\tchecksumBuffer,\n\t\t\textensionBuffer,\n\t\t\tnew Buffer([0])\n\t\t],\n\t\tEXTENSION_NAME_LENGTH + EXTENSION_LENGTH_BUFFER_LENGTH + CHECKSUM_BUFFER_LENGTH + extensionBuffer.length + 1\n\t);\n}\n\nfunction _writeGRBS(answerArray, rebusSolutions) {\n\tconst grbsBuffer = new Buffer(\n\t\tanswerArray.map(\n\t\t\t(cell, index) => {\n\t\t\t\tconst solutionKey = findKey(\n\t\t\t\t\trebusSolutions,\n\t\t\t\t\t(solutionInfo) => solutionInfo.cells.includes(index)\n\t\t\t\t);\n\n\t\t\t\tif (solutionKey === undefined) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\treturn parseInt(solutionKey, 10) + 1;\n\t\t\t}\n\t\t)\n\t);\n\n\treturn _writeExtension(grbsBuffer, \"GRBS\");\n}\n\nfunction _writeRTBL(rebusSolutions) {\n\tconst rtblBuffer = iconv.encode(\n\t\tObject.keys(rebusSolutions).map(\n\t\t\t(key) => `${padStart(key, RTBL_KEY_PADDING_WIDTH, \" \")}:${rebusSolutions[key].solution};`\n\t\t).join(\"\"),\n\t\tPUZReader.ENCODING\n\t);\n\n\treturn _writeExtension(rtblBuffer, \"RTBL\");\n}\n\nfunction _writeRUSR(userSolutionArray) {\n\tconst rusrBuffer = iconv.encode(\n\t\tuserSolutionArray.map(\n\t\t\t(solution) => {\n\t\t\t\tif (solution.length > 1) {\n\t\t\t\t\treturn `${solution}\\0`;\n\t\t\t\t}\n\n\t\t\t\treturn \"\\0\";\n\t\t\t}\n\t\t).join(\"\"),\n\t\tPUZReader.ENCODING\n\t);\n\n\treturn _writeExtension(rusrBuffer, \"RUSR\");\n}\n\nfunction _writeLTIM(timing) {\n\treturn _writeExtension(\n\t\ticonv.encode(\n\t\t\t`${timing.elapsed},${timing.running ? \"1\" : \"0\"}`,\n\t\t\tPUZReader.ENCODING\n\t\t),\n\t\t\"LTIM\"\n\t);\n}\n\nfunction _writeRebus(answerArray, userSolutionArray, extensions) {\n\tlet solutionKey = 0;\n\n\tconst rebusSolutions = flatten(answerArray).reduce(\n\t\t(solutions, cellSolution, cellIndex) => {\n\t\t\tif (cellSolution && cellSolution.length > 1) {\n\t\t\t\tconst key = findKey(solutions, {solution: cellSolution});\n\n\t\t\t\tif (key === undefined) {\n\t\t\t\t\tsolutions[++solutionKey] = {\n\t\t\t\t\t\tsolution: cellSolution,\n\t\t\t\t\t\tcells: [cellIndex]\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsolutions[key].cells.push(cellIndex);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn solutions;\n\t\t},\n\t\t{}\n\t);\n\n\tconst grbsBuffer = _writeGRBS(answerArray, rebusSolutions);\n\n\tconst rtblBuffer = _writeRTBL(rebusSolutions);\n\n\tconst rusrBuffer = _writeRUSR(userSolutionArray);\n\n\tconst buffers = [\n\t\tgrbsBuffer,\n\t\trtblBuffer,\n\t\trusrBuffer,\n\t];\n\n\tlet totalBufferLength = grbsBuffer.length + rtblBuffer.length + rusrBuffer.length;\n\n\tif (extensions.timing) {\n\t\tconst ltimBuffer = _writeLTIM(extensions.timing);\n\t\tbuffers.push(ltimBuffer);\n\n\t\ttotalBufferLength += ltimBuffer.length;\n\t}\n\n\treturn Buffer.concat(\n\t\tbuffers,\n\t\ttotalBufferLength\n\t);\n}\n\nfunction _parsePuzzle(path, options) {\n\tconst data = {};\n\n\tconst reader = new PUZReader(path);\n\n\tdata.header = _readHeader(reader, options);\n\n\tconst numberOfCells = data.header.width * data.header.height;\n\n\tdata.answer = reader._readString(numberOfCells);\n\n\tif (data.header.solutionState === SOLUTION_STATE.Locked) {\t\t\t\t\t\t\n\t\tdata.unscrambledAnswer = _unscrambleSolution(\n\t\t\t{\n\t\t\t\theader: data.header,\n\t\t\t\tanswer: data.answer\n\t\t\t},\n\t\t\toptions.solutionKey\n\t\t);\n\t}\n\telse {\n\t\tdata.unscrambledAnswer = data.answer;\n\t}\n\n\tdata.solution = reader._readString(numberOfCells);\n\n\tdata.title = reader._readString();\n\n\tdata.author = reader._readString();\n\n\tdata.copyright = reader._readString();\n\n\tdata.clueList = _readClues(reader, data.header.numberOfClues);\n\n\tconst gridAndClues = _generateGridAndClues(\n\t\t_unflattenSolution(data.unscrambledAnswer, data.header.width),\n\t\tdata.clueList\n\t);\n\n\tdata.grid = gridAndClues.grid;\n\tdata.clues = gridAndClues.clues;\n\n\tdata.notes = reader._readString();\n\n\t _parseExtensions(reader, data);\n\n\t return data;\n}\n\nfunction validatePuzzle(puzzle) {\n\tconst checksumResults = _validateChecksums(puzzle);\n\n\tconst errors = [];\n\n\tif (checksumResults) {\n\t\terrors.push(...checksumResults);\n\t}\n\n\treturn errors.length === 0 ? undefined : errors;\n}\n\nfunction _getPuzzleData(path, options) {\n\treturn new Promise(\n\t\t(resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tconst puzzleData = _parsePuzzle(path, options);\n\n\t\t\t\tconst errors = validatePuzzle(puzzleData);\n\n\t\t\t\tif (errors !== undefined) {\n\t\t\t\t\treject(`Invalid puzzle:\\n\\t${errors.join(\"\\n\\t\")}`);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tresolve({\n\t\t\t\t\t\tinfo: {\n\t\t\t\t\t\t\ttitle: puzzleData.title || undefined,\n\t\t\t\t\t\t\tauthor: puzzleData.author || undefined,\n\t\t\t\t\t\t\tcopyright: puzzleData.copyright || undefined,\n\t\t\t\t\t\t\tintro: puzzleData.notes || undefined,\n\t\t\t\t\t\t\tformatExtra: {\n\t\t\t\t\t\t\t\tversion: puzzleData.header.version,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tgrid: puzzleData.grid,\n\t\t\t\t\t\tclues: puzzleData.clues,\n\t\t\t\t\t\tuserSolution: _unflattenSolution(puzzleData.solution, puzzleData.header.width),\n\t\t\t\t\t\textensions: {\n\t\t\t\t\t\t\ttiming: puzzleData.timing\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch(err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t}\n\t);\n}\n\n/**\n * Parser class for PUZ-formatted puzzles.\n *\n * @constructor\n */\nclass PUZParser {\n\t/**\n\t * Parses a file in .puz format into a {@link module:xpuz/puzzle~Puzzle|Puzzle} object.\n\t *\n\t * @memberOf module:xpuz/parsers/puz~PUZParser\n\t * @function\n\t * @instance\n\t *\n\t * @param {string|external:Buffer|ArrayBuffer} path - the .puz file to parse, either as a file path\n\t *\t(strong) or a {@link external:Buffer|Buffer} or {@link external:ArrayBuffer|ArrayBuffer} containing the puzzle\n\t *\tcontent.\n\t * @param {object} [options] - an object of options to affect the parsing\n\t * @param {Number} [options.solutionKey] - an integer between 1000 and 9999, inclusive, to use to unlock\n\t *\tthe puzzle's solution if the solution is locked. If the solution is not locked, this is ignored.\n\t *\n\t * @throws if the puzzle is locked and an invalid (or no) `options.solutionKey` was provided\n\t *\n\t * @returns {external:Bluebird} a promise that resolves with the {@link module:xpuz/puzzle~Puzzle|Puzzle} object \n\t */\n\tparse(path, options) {\n\t\toptions = options || {};\n\n\t\treturn _getPuzzleData(path, options).then(\n\t\t\t(puzzleData) => new Puzzle(puzzleData)\n\t\t);\n\t}\n\n\t/**\n\t * Given a {@link module:xpuz/puzzle~Puzzle|Puzzle} object, returns a {@link external:Buffer|Buffer}\n\t * containing the puzzle in .puz format.\n\t *\n\t * @memberOf module:xpuz/parsers/puz~PUZParser\n\t * @function\n\t * @instance\n\t *\n\t * @param {module:xpuz/puzzle~Puzzle} puzzle - the puzzle to convert to .puz content.\n\t * @param {object} [options] - an object containing additional options for the conversion\n\t * @param {boolean} [options.scrambled] - if true, the puzzle's solution will be scrambled\n\t * @param {Number} [options.solutionKey] - the solution key with which to scramble the solution. \n\t *\tIf `options.scrambled` is true, this is required.\n\t *\n\t * @throws if `options.scrambled` is true but `options.solutionKey` is not a 4-digit integer\n\t *\t(between 1000 and 9999, inclusive).\n\t *\n\t * @returns {external:Buffer} a Buffer containing the .puz content. \n\t */\n\tgenerate(puzzle, options) {\n\t\tpuzzle = puzzle.toJSON();\n\n\t\tconst numberOfClues = size(puzzle.clues.across) + size(puzzle.clues.down);\n\t\tconst puzzleType = PUZZLE_TYPE.Normal;\n\t\tlet solutionState = SOLUTION_STATE.Unlocked;\n\n\t\toptions = options || {};\n\n\t\tconst height = puzzle.grid.length;\n\t\tconst width = puzzle.grid[0].length;\n\n\t\tconst notes = puzzle.info.intro || \"\";\n\n\t\tlet answerArray = _pluckSolutions(puzzle.grid);\n\t\tlet unscrambledAnswerArray;\n\n\t\tif (options.scrambled) {\n\t\t\tif (\n\t\t\t\t!options.solutionKey ||\n\t\t\t\tNumber(options.solutionKey) < MINIMUM_KEY_VALUE ||\n\t\t\t\tNumber(options.solutionKey) > MAXIMUM_KEY_VALUE\n\t\t\t) {\n\t\t\t\tthrow new Error(`Must specify a solution key that is an integer >= 1000 and <= 9999; was ${options.solutionKey}`);\n\t\t\t}\n\n\t\t\tunscrambledAnswerArray = answerArray;\n\t\t\tanswerArray = _scrambleSolution(answerArray, options.solutionKey);\n\n\t\t\tsolutionState = SOLUTION_STATE.Locked;\n\t\t}\n\n\t\tconst flattenedAnswerArray = flatten(answerArray);\n\t\tconst flattenedUnscrambledAnswerArray = flatten(unscrambledAnswerArray || answerArray);\n\n\t\tconst userSolution = puzzle.userSolution.map(\n\t\t\t(row) => row.map(\n\t\t\t\t(solution) => {\n\t\t\t\t\tif (solution === null) {\n\t\t\t\t\t\treturn BLOCK_CELL_VALUE;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (solution === \"\") {\n\t\t\t\t\t\treturn \"-\";\n\t\t\t\t\t}\n\n\t\t\t\t\treturn solution;\n\t\t\t\t}\n\t\t\t)\n\t\t);\n\n\t\tconst userSolutionArray = flatten(userSolution);\n\n\t\tconst clueList = compact(flatten(puzzle.grid).map((cell) => cell.clueNumber)).reduce(\n\t\t\t(cluesArray, clueNumber) => {\n\t\t\t\tif (puzzle.clues.across[clueNumber] !== undefined) {\n\t\t\t\t\tcluesArray.push(puzzle.clues.across[clueNumber]);\n\t\t\t\t}\n\n\t\t\t\tif (puzzle.clues.down[clueNumber] !== undefined) {\n\t\t\t\t\tcluesArray.push(puzzle.clues.down[clueNumber]);\n\t\t\t\t}\n\n\t\t\t\treturn cluesArray;\n\t\t\t},\n\t\t\t[]\n\t\t);\n\n\t\tconst puzzleData = {\n\t\t\theader: {\n\t\t\t\twidth,\n\t\t\t\theight,\n\t\t\t\tnumberOfClues,\n\t\t\t\tpuzzleType,\n\t\t\t\tsolutionState,\n\t\t\t\tversion: get(puzzle.info, \"formatExtra.version\") || \"1.3\",\n\t\t\t},\n\t\t\tanswer: _flattenSolution(flattenedAnswerArray),\n\t\t\tunscrambledAnswer: _flattenSolution(flattenedUnscrambledAnswerArray),\n\t\t\tsolution: _flattenSolution(userSolution),\n\t\t\ttitle: puzzle.info.title,\n\t\t\tauthor: puzzle.info.author,\n\t\t\tcopyright: puzzle.info.copyright,\n\t\t\tclueList,\n\t\t\tnotes,\n\t\t};\n\n\t\tconst headerBuffer = _writeHeader(puzzleData, options);\n\n\t\tconst answerStringBuffer = iconv.encode(\n\t\t\t_flattenSolution(answerArray),\n\t\t\tPUZReader.ENCODING\n\t\t);\n\n\t\tconst userSolutionStringBuffer = iconv.encode(\n\t\t\tuserSolutionArray.map(\n\t\t\t\t(solution) => solution[0]\n\t\t\t).join(\"\"),\n\t\t\tPUZReader.ENCODING\n\t\t);\n\n\t\tconst titleStringBuffer = iconv.encode(`${puzzle.info.title || \"\"}\\0`, PUZReader.ENCODING);\n\t\tconst authorStringBuffer = iconv.encode(`${puzzle.info.author || \"\"}\\0`, PUZReader.ENCODING);\n\t\tconst copyrightStringBuffer = iconv.encode(`${puzzle.info.copyright || \"\"}\\0`, PUZReader.ENCODING);\n\n\t\tconst cluesStringBuffer = iconv.encode(`${clueList.join(\"\\0\")}\\0`, PUZReader.ENCODING);\n\n\t\tconst notesStringBuffer = iconv.encode(`${notes}\\0`, PUZReader.ENCODING);\n\n\t\tconst buffers = [\n\t\t\theaderBuffer,\n\t\t\tanswerStringBuffer,\n\t\t\tuserSolutionStringBuffer,\n\t\t\ttitleStringBuffer,\n\t\t\tauthorStringBuffer,\n\t\t\tcopyrightStringBuffer,\n\t\t\tcluesStringBuffer,\n\t\t\tnotesStringBuffer,\n\t\t];\n\n\t\tlet totalBufferLength = headerBuffer.length + answerStringBuffer.length +\n\t\t\tuserSolutionStringBuffer.length + titleStringBuffer.length +\n\t\t\tauthorStringBuffer.length + copyrightStringBuffer.length +\n\t\t\tcluesStringBuffer.length + notesStringBuffer.length;\n\n\t\tif (\n\t\t\tflattenedUnscrambledAnswerArray.some((solution) => solution.length > 1)\n\t\t) {\n\t\t\tconst rebusBuffer = _writeRebus(\n\t\t\t\tflattenedUnscrambledAnswerArray,\n\t\t\t\tuserSolutionArray,\n\t\t\t\tpuzzle.extensions || {}\n\t\t\t);\n\n\t\t\tbuffers.push(rebusBuffer);\n\n\t\t\ttotalBufferLength += rebusBuffer.length;\n\t\t}\n\n\t\treturn Buffer.concat(buffers, totalBufferLength);\n\t}\n}\n\nexports = module.exports = PUZParser;\n"],"file":"puz.js"}