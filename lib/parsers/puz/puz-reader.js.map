{"version":3,"sources":["../../../src/parsers/puz/puz-reader.js"],"names":["isString","require","fs","BufferReader","iconv","ENCODING","INT16_BYTE_COUNT","INT32_BYTE_COUNT","DEFAULT_STRING_BUFFER_LENGTH","PUZReader","puz","length","_bufferReader","nextBuffer","position","relativeTo","start","seek","current","move","_readValues","readUInt8","readUInt16LE","readUInt32LE","bufferLength","size","currentPosition","tell","buffer","str","decode","nullIndex","indexOf","nullOffset","_seek","substring","_readString","_bufferSize","_buffer","readFileSync","Buffer","ArrayBuffer","Uint8Array","module","exports"],"mappings":"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","sourcesContent":["const isString     = require(\"lodash/isString\");\nconst fs           = require(\"fs\");\nconst BufferReader = require(\"buffer-reader\");\nconst iconv        = require(\"iconv-lite\");\n\nconst ENCODING = \"ISO-8859-1\";\n\nconst INT16_BYTE_COUNT = 2;\n\nconst INT32_BYTE_COUNT = 4;\n\nconst DEFAULT_STRING_BUFFER_LENGTH = 20;\n\nclass PUZReader {\n\tstatic ENCODING = ENCODING\n\n\tconstructor(puz) {\n\t\tlet _buffer;\n\n\t\tif (isString(puz)) {\n\t\t\t// filename\n\t\t\t_buffer = fs.readFileSync(puz);\n\t\t}\n\t\telse if (puz instanceof Buffer) {\n\t\t\t// Already a buffer\n\t\t\t_buffer = puz;\n\t\t}\n\t\telse if (puz instanceof ArrayBuffer) {\n\t\t\t// ArrayBuffer--probably from client-side JS\n\t\t\t_buffer = new Buffer(new Uint8Array(puz));\n\t\t}\n\n\t\tthis._bufferReader = new BufferReader(_buffer);\n\n\t\tthis._bufferSize = _buffer.length;\n\t}\n\n\t_readValues = (length) => this._bufferReader.nextBuffer(length)\n\n\t_seek = (position, relativeTo) => {\n\t\trelativeTo = relativeTo || { start: true };\n\n\t\tif (relativeTo.start) {\n\t\t\tthis._bufferReader.seek(position);\n\t\t}\n\t\telse if (relativeTo.current) {\n\t\t\tthis._bufferReader.move(position);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t_readUInt8 = () => this._readValues(1).readUInt8(0)\n\n\t_readUInt16 = () => this._readValues(INT16_BYTE_COUNT).readUInt16LE(0)\n\n\t_readUInt32 = () => this._readValues(INT32_BYTE_COUNT).readUInt32LE(0)\n\n\t_readString = (length) => {\n\t\tlet bufferLength = length || DEFAULT_STRING_BUFFER_LENGTH;\n\n\t\tconst size = this.size();\n\t\tconst currentPosition = this.tell();\n\n\t\tif (currentPosition + bufferLength > size) {\n\t\t\tbufferLength = size - currentPosition;\n\t\t}\n\n\t\tif (bufferLength === 0) {\n\t\t\treturn \"\";\n\t\t}\n\n\t\tconst buffer = this._readValues(bufferLength);\n\t\tlet str = iconv.decode(buffer, ENCODING);\n\n\t\tif (length) {\n\t\t\treturn str;\n\t\t}\n\n\t\tconst nullIndex = str.indexOf(\"\\0\");\n\n\t\tif (nullIndex >= 0) {\n\t\t\tconst nullOffset = nullIndex - str.length;\n\n\t\t\tif (nullOffset < 0) {\n\t\t\t\tthis._seek(nullOffset + 1, { current: true });\n\n\t\t\t\tstr = str.substring(0, nullIndex);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tstr = str + this._readString();\n\t\t}\n\n\t\treturn str;\n\t}\n\n\tsize = () => this._bufferSize\n\n\ttell = () => this._bufferReader.tell()\n}\n\nmodule.exports = exports = PUZReader;\n"],"file":"puz-reader.js"}